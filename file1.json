"{\"items\":[{\"tags\":[\"wordpress-plugin\",\"xml-rpc\",\"json-api\"],\"question_id\":24304649,\"creation_date\":1403174548,\"extraction_date\":\"2017-09-27T04:41:03.425Z\",\"title\":\"wordpress json api xmlrpc\",\"codeblocks\":\"[\\\"Files xmlrpc.php\\\\nOrder Deny,Allow\\\\nDeny from all\\\\nAllow from 123.456.789\\\\nAllow from 321.654.987\\\\nFiles\\\\n\\\"]\",\"languages\":{\"detected\":\"Unknown\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"jquery\",\"wordpress\",\"performance\",\"filtering\",\"json-api\"],\"question_id\":25380797,\"creation_date\":1408443107,\"extraction_date\":\"2017-09-27T04:41:03.427Z\",\"title\":\"Use filter.js streaming with Wordpress JSON API\",\"codeblocks\":\"[\\\"&count=-1\\\",\\\".json?offset=0&limit=50\\\",\\\"&page=2\\\",\\\"apiLocation: '/api/get_posts/?post_type=business&count=-1',\\\\n\\\\nsettings: {\\\\n  filter_on_init: true,\\\\n  filter_criteria: {\\\\n    location: ['.js__filter-location .TYPE.any', 'taxonomy_business_location.ARRAY.slug'],\\\\n    type: ['.js__filter-type .TYPE.any', 'taxonomy_business_type.ARRAY.slug']\\\\n  },\\\\n  search: {\\\\n    input: '#filterSearch',\\\\n    search_in: '.media__title, .media__body, .media__footer'\\\\n  },\\\\n  filter_types: {\\\\n    any: function( current_value, option ){\\\\n      if ( current_value === '') { return true; }\\\\n      else { return current_value === option; }\\\\n    }\\\\n  },\\\\n\\\\n  streaming: {\\\\n    data_url: filter.apiLocation,\\\\n    stream_after: 1,\\\\n    batch_size: 10\\\\n  },\\\\n}\\\\n\\\\ninit: function(){\\\\n  return FilterJS( filter.get_api_data( filter.apiLocation ).posts, '#resultsList', filter.view, filter.settings );\\\\n}\\\\n\\\\n\\\\nget_api_data: function( api_location ){\\\\n\\\\n  var data;\\\\n\\\\n  $.ajax({\\\\n    async: false, //thats the trick\\\\n    url: api_location,\\\\n    dataType: 'json',\\\\n    success: function( response ){\\\\n       data = response;\\\\n    }\\\\n  });\\\\n\\\\n  return data;\\\\n\\\\n},\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":7,\"C\":0,\"C++\":0,\"Python\":2,\"Java\":0,\"HTML\":0,\"CSS\":2,\"Ruby\":2,\"Go\":0,\"PHP\":2,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"orm\",\"ember-data\",\"sails.js\",\"json-api\"],\"question_id\":25492598,\"creation_date\":1408993058,\"extraction_date\":\"2017-09-27T04:41:03.427Z\",\"title\":\"How to isolate all data on a per user base in sails.js for ember.js?\",\"codeblocks\":\"[\\\"/notes/findAll\\\"]\",\"languages\":{\"detected\":\"Unknown\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"rest\",\"ember.js\",\"json-api\"],\"question_id\":27653206,\"creation_date\":1419572326,\"extraction_date\":\"2017-09-27T04:41:03.428Z\",\"title\":\"Saving two new related objects in one request\",\"codeblocks\":\"[\\\"class Thread(models.Model):\\\\n    entity = models.ForeignKey(Entity, null=True, blank=True)\\\\n    ...\\\\n\\\\nclass ThreadMessage(models.Model):\\\\n    thread = models.ForeignKey(Thread, related_name='messages')\\\\n    author = models.ForeignKey(User)\\\\n    ...\\\\n\\\",\\\"POST /threads\\\",\\\"id\\\",\\\"POST /messages\\\",\\\"thread\\\",\\\"POST /messages \\\\n{\\\\\\\"message\\\\\\\": {\\\\\\\"text\\\\\\\": \\\\\\\"text\\\\\\\", ...},\\\\n \\\\\\\"thread\\\\\\\":  {\\\\\\\"entity\\\\\\\": 1}}\\\\n\\\",\\\"{\\\\\\\"message\\\\\\\": {\\\\\\\"text\\\\\\\": \\\\\\\"text\\\\\\\", \\\\\\\"id\\\\\\\": 5678, \\\\\\\"thread\\\\\\\": 1234, ...},\\\\n \\\\\\\"thread\\\\\\\":  {\\\\\\\"entitity\\\\\\\": 1, \\\\\\\"id\\\\\\\": 1234, ...}}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":3,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":2,\"HTML\":2,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"ember-data\",\"json-api\"],\"question_id\":28480760,\"creation_date\":1423753255,\"extraction_date\":\"2017-09-27T04:41:03.429Z\",\"title\":\"Adapter that converges two API sources into one model\",\"codeblocks\":\"[\\\"cats\\\",\\\"dogs\\\",\\\"animals\\\",\\\"save()\\\",\\\"animal\\\",\\\"cat\\\",\\\"dog\\\",\\\"animal\\\"]\",\"languages\":{\"detected\":\"Unknown\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"asp.net\",\"entity-framework\",\"json-api\"],\"question_id\":28507365,\"creation_date\":1423856060,\"extraction_date\":\"2017-09-27T04:41:03.435Z\",\"title\":\"Can not query a single resource after upgrading JSONAPI.NET to latest version (0.3.0-pre-1)\",\"codeblocks\":\"[\\\"JSONAPI.EntityFramework.Http.ApiController\\\",\\\"System.Web.Http.ApiController\\\",\\\"{\\\\n\\\\\\\"errors\\\\\\\": [\\\\n    {\\\\n        \\\\\\\"id\\\\\\\": \\\\\\\"6b49c8a9-d7b4-473e-80cd-c771fe1e7d13\\\\\\\",\\\\n        \\\\\\\"status\\\\\\\": \\\\\\\"500\\\\\\\",\\\\n        \\\\\\\"title\\\\\\\": \\\\\\\"System.AggregateException\\\\\\\",\\\\n        \\\\\\\"detail\\\\\\\": \\\\\\\"One or more errors occurred.\\\\\\\",\\\\n        \\\\\\\"inner\\\\\\\": {\\\\n            \\\\\\\"id\\\\\\\": null,\\\\n            \\\\\\\"status\\\\\\\": \\\\\\\"500\\\\\\\",\\\\n            \\\\\\\"title\\\\\\\": \\\\\\\"System.ArgumentException\\\\\\\",\\\\n            \\\\\\\"detail\\\\\\\": \\\\\\\"The Type AssetClass was not found in the DbContext with Type ApiContext\\\\\\\",\\\\n            \\\\\\\"inner\\\\\\\": {\\\\n                \\\\\\\"id\\\\\\\": null,\\\\n                \\\\\\\"status\\\\\\\": \\\\\\\"500\\\\\\\",\\\\n                \\\\\\\"title\\\\\\\": \\\\\\\"System.ArgumentException\\\\\\\",\\\\n                \\\\\\\"detail\\\\\\\": \\\\\\\"The member with identity 'ConeTec.DataServices.Web.Areas.WebApi.Models.AssetClass' does not exist in the metadata collection.\\\\\\\\r\\\\\\\\nParameter name: identity\\\\\\\",\\\\n                \\\\\\\"inner\\\\\\\": null,\\\\n                \\\\\\\"stackTrace\\\\\\\": \\\\\\\"   at System.Data.Entity.Core.Metadata.Edm.ItemCollection.GetItem[T](String identity, Boolean ignoreCase)\\\\\\\\r\\\\\\\\n   at JSONAPI.EntityFramework.EntityFrameworkMaterializer.GetKeyNames(Type type)\\\\\\\"\\\\n            },\\\\n            \\\\\\\"stackTrace\\\\\\\": \\\\\\\"   at JSONAPI.EntityFramework.EntityFrameworkMaterializer.GetKeyNames(Type type)\\\\\\\\r\\\\\\\\n   at JSONAPI.EntityFramework.EntityFrameworkMaterializer.GetKeyProperties(Type type)\\\\\\\\r\\\\\\\\n   at JSONAPI.EntityFramework.EntityFrameworkMaterializer.GetByIdAsync(Type type, Object[] idValues)\\\\\\\\r\\\\\\\\n   at JSONAPI.EntityFramework.EntityFrameworkMaterializer.<GetByIdAsync>d__0`1.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\\\\\\\r\\\\\\\\n   at JSONAPI.Http.ApiController`1.<Get>d__0.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\\\\\\\r\\\\\\\\n   at System.Threading.Tasks.TaskHelpersExtensions.<CastToObject>d__3`1.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\\\\\\\r\\\\\\\\n   at System.Web.Http.Controllers.ApiControllerActionInvoker.<InvokeActionAsyncCore>d__0.MoveNext()\\\\\\\"\\\\n        }\\\\n   }\\\\n]\\\\n\\\",\\\"{\\\\n\\\\\\\"errors\\\\\\\": [\\\\n    {\\\\n        \\\\\\\"id\\\\\\\": \\\\\\\"57a5f40e-b170-407f-982a-c7cad64539e9\\\\\\\",\\\\n        \\\\\\\"status\\\\\\\": \\\\\\\"500\\\\\\\",\\\\n        \\\\\\\"title\\\\\\\": \\\\\\\"System.AggregateException\\\\\\\",\\\\n        \\\\\\\"detail\\\\\\\": \\\\\\\"One or more errors occurred.\\\\\\\",\\\\n        \\\\\\\"inner\\\\\\\": {\\\\n            \\\\\\\"id\\\\\\\": null,\\\\n            \\\\\\\"status\\\\\\\": \\\\\\\"500\\\\\\\",\\\\n            \\\\\\\"title\\\\\\\": \\\\\\\"System.ArgumentException\\\\\\\",\\\\n            \\\\\\\"detail\\\\\\\": \\\\\\\"The Type AssetClass was not found in the DbContext with Type ApiContext\\\\\\\",\\\\n            \\\\\\\"inner\\\\\\\": {\\\\n                \\\\\\\"id\\\\\\\": null,\\\\n                \\\\\\\"status\\\\\\\": \\\\\\\"500\\\\\\\",\\\\n                \\\\\\\"title\\\\\\\": \\\\\\\"System.ArgumentException\\\\\\\",\\\\n                \\\\\\\"detail\\\\\\\": \\\\\\\"The member with identity 'ConeTec.DataServices.Web.Areas.WebApi.Models.AssetClass' does not exist in the metadata collection.\\\\\\\\r\\\\\\\\nParameter name: identity\\\\\\\",\\\\n                \\\\\\\"inner\\\\\\\": null,\\\\n                \\\\\\\"stackTrace\\\\\\\": \\\\\\\"   at System.Data.Entity.Core.Metadata.Edm.ItemCollection.GetItem[T](String identity, Boolean ignoreCase)\\\\\\\\r\\\\\\\\n   at JSONAPI.EntityFramework.EntityFrameworkMaterializer.GetKeyNames(Type type)\\\\\\\"\\\\n            },\\\\n            \\\\\\\"stackTrace\\\\\\\": \\\\\\\"   at JSONAPI.EntityFramework.EntityFrameworkMaterializer.GetKeyNames(Type type)\\\\\\\\r\\\\\\\\n   at JSONAPI.EntityFramework.EntityFrameworkMaterializer.GetKeyProperties(Type type)\\\\\\\\r\\\\\\\\n   at JSONAPI.EntityFramework.EntityFrameworkMaterializer.GetByIdAsync(Type type, Object[] idValues)\\\\\\\\r\\\\\\\\n   at JSONAPI.EntityFramework.EntityFrameworkMaterializer.<GetByIdAsync>d__0`1.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\\\\\\\r\\\\\\\\n   at JSONAPI.Http.ApiController`1.<Get>d__0.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\\\\\\\r\\\\\\\\n   at System.Threading.Tasks.TaskHelpersExtensions.<CastToObject>d__3`1.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\\\\\\\r\\\\\\\\n   at System.Web.Http.Controllers.ApiControllerActionInvoker.<InvokeActionAsyncCore>d__0.MoveNext()\\\\\\\"\\\\n        },\\\\n        \\\\\\\"stackTrace\\\\\\\": \\\\\\\"   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\\\\\\\\r\\\\\\\\n   at System.Threading.Tasks.Task.Wait(Int32 millisecondsTimeout, CancellationToken cancellationToken)\\\\\\\\r\\\\\\\\n   at System.Threading.Tasks.Task.Wait()\\\\\\\\r\\\\\\\\n   at ConeTec.DataServices.Web.Filters.ApiUserContextAttribute.ExecuteActionFilterAsync(HttpActionContext actionContext, CancellationToken cancellationToken, Func`1 continuation) in c:\\\\\\\\\\\\\\\\CDS\\\\\\\\\\\\\\\\ConeTecGeoDb\\\\\\\\\\\\\\\\ConeTec.DataServices.Web\\\\\\\\\\\\\\\\Filters\\\\\\\\\\\\\\\\UserContextAttribute.cs:line 160\\\\\\\\r\\\\\\\\n   at System.Web.Http.Filters.ActionFilterAttribute.<CallOnActionExecutedAsync>d__5.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Web.Http.Filters.ActionFilterAttribute.<CallOnActionExecutedAsync>d__5.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\\\\\\\r\\\\\\\\n   at System.Web.Http.Filters.ActionFilterAttribute.<ExecuteActionFilterAsyncCore>d__0.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\\\\\\\r\\\\\\\\n   at System.Web.Http.Filters.ActionFilterAttribute.<CallOnActionExecutedAsync>d__5.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Web.Http.Filters.ActionFilterAttribute.<CallOnActionExecutedAsync>d__5.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\\\\\\\r\\\\\\\\n   at System.Web.Http.Filters.ActionFilterAttribute.<ExecuteActionFilterAsyncCore>d__0.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\\\\\\\r\\\\\\\\n   at System.Web.Http.Controllers.ActionFilterResult.<ExecuteAsync>d__2.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\\\\\\\r\\\\\\\\n   at System.Web.Http.Filters.AuthorizationFilterAttribute.<ExecuteAuthorizationFilterAsyncCore>d__2.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\\\\\\\r\\\\\\\\n   at System.Web.Http.Filters.AuthorizationFilterAttribute.<ExecuteAuthorizationFilterAsyncCore>d__2.MoveNext()\\\\\\\\r\\\\\\\\n--- End of stack trace from previous location where exception was thrown ---\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)\\\\\\\\r\\\\\\\\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\\\\\\\\r\\\\\\\\n   at System.Web.Http.Dispatcher.HttpControllerDispatcher.<SendAsync>d__1.MoveNext()\\\\\\\"\\\\n    }\\\\n]\\\\n\\\",\\\"AssetClassesController\\\",\\\"using System;\\\\nusing System.Collections.Generic;\\\\nusing System.Linq;\\\\nusing System.Net;\\\\nusing System.Net.Http;\\\\nusing System.Web.Http;\\\\nusing ConeTec.DataServices.Web.Areas.WebApi.Models;\\\\nusing JSONAPI.EntityFramework.Http;\\\\n\\\\nnamespace ConeTec.DataServices.Web.Areas.WebApi.Controllers {\\\\n    public class AssetClassesController : ApiController<AssetClass, ApiContext> {\\\\n\\\\n    }\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"Java\",\"statistics\":{\"JavaScript\":3,\"C\":0,\"C++\":0,\"Python\":2,\"Java\":6,\"HTML\":0,\"CSS\":2,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"json\",\"rest\",\"go\",\"query-parameters\",\"json-api\"],\"question_id\":28635895,\"creation_date\":1424457385,\"extraction_date\":\"2017-09-27T04:41:03.436Z\",\"title\":\"Adding query Paramters to Go Json Rest\",\"codeblocks\":\"[\\\"//in another function\\\\n&rest.Route{\\\\\\\"GET\\\\\\\", \\\\\\\"/reminders\\\\\\\", i.GetAllReminders},\\\\n\\\\nfunc (i *Impl) GetAllReminders(w rest.ResponseWriter, r *rest.Request) {\\\\n    reminders := []Reminder{}\\\\n    i.DB.Find(&reminders)\\\\n    w.WriteJson(&reminders)\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"Go\",\"statistics\":{\"JavaScript\":-1,\"C\":2,\"C++\":0,\"Python\":0,\"Java\":-1,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":3,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"null\",\"ember-data\",\"json-api\"],\"question_id\":29215954,\"creation_date\":1427129878,\"extraction_date\":\"2017-09-27T04:41:03.436Z\",\"title\":\"JsonApiAdapter omitting null selection\",\"codeblocks\":\"[\\\"<select>\\\"]\",\"languages\":{\"detected\":\"Unknown\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"rest\",\"json-api\"],\"question_id\":30447607,\"creation_date\":1432599567,\"extraction_date\":\"2017-09-27T04:41:03.437Z\",\"title\":\"jsonapi way of tracking updated user after request on linked resource\",\"codeblocks\":\"[\\\"POST /users/<user_id>/following/\\\\nContent-Type: application/vnd.api+json\\\\nAccept: application/vnd.api+json\\\\n{\\\\n    \\\\\\\"data\\\\\\\": [\\\\n        { \\\\\\\"type\\\\\\\": \\\\\\\"user\\\\\\\", \\\\\\\"id\\\\\\\": <following_user_id> }\\\\n    ]\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"android\",\"google-cloud-storage\",\"json-api\"],\"question_id\":30593083,\"creation_date\":1433239652,\"extraction_date\":\"2017-09-27T04:41:03.439Z\",\"title\":\"android acces google storage Version v1beta2 of this API is no longer available. Please try again using JSON API v1\",\"codeblocks\":\"[\\\" import com.google.api.client.json.JsonFactory;\\\\n import com.google.api.client.json.jackson2.JacksonFactory;\\\\n\\\\n\\\\n  Storage storage = getStorage();\\\\n\\\\n                 Storage.Objects.List listObjects =    storage.objects().list(mContext.getString(R.string.storage_bucket_name));\\\\n                 com.google.api.services.storage.model.Objects objects;\\\\n\\\\n                 do {\\\\n                        objects = listObjects.execute();\\\\n                        List<StorageObject> items = objects.getItems();\\\\n                        if (null == items) {\\\\n                          System.out.println(\\\\\\\"There were no objects in the given bucket; try adding some and re-running.\\\\\\\");\\\\n                          break;\\\\n                        }\\\\n                        for (StorageObject object : items) {\\\\n                          System.out.println(object.getName() + \\\\\\\" (\\\\\\\" + object.getSize() + \\\\\\\" bytes)\\\\\\\");\\\\n                        }\\\\n                        listObjects.setPageToken(objects.getNextPageToken());\\\\n                      } while (null != objects.getNextPageToken());\\\\n\\\\n            } catch (IOException e) {\\\\n                e.printStackTrace();\\\\n            } catch (GeneralSecurityException e) {\\\\n                e.printStackTrace();\\\\n            } catch (Exception e) {\\\\n                e.printStackTrace();\\\\n            }\\\\n\\\",\\\"    private Storage getStorage() throws Exception {\\\\n    if (sStorage == null) {\\\\n        HttpTransport httpTransport = new NetHttpTransport();\\\\n        JsonFactory jsonFactory = new JacksonFactory();\\\\n\\\\n        List<String> scopes = new ArrayList<String>();\\\\n        scopes.add(StorageScopes.DEVSTORAGE_FULL_CONTROL);\\\\n        AssetManager am = mContext.getAssets();\\\\n        InputStream inputStream = am.open(mContext.getResources().getString(R.string.storage_p12_key_path)); // you\\\\n        File file = UtilsMedia.stream2file(inputStream);\\\\n        GoogleCredential credential = new GoogleCredential.Builder().setTransport(httpTransport).setJsonFactory(jsonFactory)\\\\n                .setServiceAccountId(mContext.getResources().getString(R.string.storage_mail_id))\\\\n                  .setServiceAccountScopes((scopes)).setServiceAccountPrivateKeyFromP12File(file).  build();\\\\n\\\\n        sStorage = new Storage.Builder(httpTransport, jsonFactory,   credential).setApplicationName(\\\\\\\"Veolia e-fsm\\\\\\\").build();\\\\n    }\\\\n    return sStorage;\\\\n     }\\\\n\\\"]\",\"languages\":{\"detected\":\"Java\",\"statistics\":{\"JavaScript\":3,\"C\":2,\"C++\":3,\"Python\":2,\"Java\":13,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":1,\"PHP\":2,\"Unknown\":1}}},{\"tags\":[\"c++\",\"arrays\",\"json\",\"jsonobject\",\"json-api\"],\"question_id\":30675680,\"creation_date\":1433537829,\"extraction_date\":\"2017-09-27T04:41:03.440Z\",\"title\":\"How to determine if JSON is object or array in cpp, and if object convert it to array?\",\"codeblocks\":\"[\\\"  {\\\\\\\"intervention\\\\\\\":\\\\n\\\\n    [\\\\n     { \\\\n      \\\\\\\"id\\\\\\\":\\\\\\\"3\\\\\\\",\\\\n              \\\\\\\"subject\\\\\\\":\\\\\\\"dddd\\\\\\\",\\\\n              \\\\\\\"details\\\\\\\":\\\\\\\"dddd\\\\\\\",\\\\n              \\\\\\\"beginDate\\\\\\\":\\\\\\\"2012-03-08T00:00:00+01:00\\\\\\\",\\\\n              \\\\\\\"endDate\\\\\\\":\\\\\\\"2012-03-18T00:00:00+01:00\\\\\\\",\\\\n              \\\\\\\"campus\\\\\\\":\\\\n                       { \\\\n                         \\\\\\\"id\\\\\\\":\\\\\\\"2\\\\\\\",\\\\n                         \\\\\\\"name\\\\\\\":\\\\\\\"paris\\\\\\\"\\\\n                       }\\\\n           }\\\\n     ]\\\\n}\\\\n\\\",\\\"[ , ]\\\",\\\"if (parsedJson[\\\\\\\"intervention\\\\\\\"] == jsonObject])\\\\n   covertObjectToArray\\\\n\\\",\\\"std::string tmp = parsedJson[\\\\\\\"intervention\\\\\\\"].asString()\\\\nif (firstChar is \\\\\\\"{\\\\\\\")\\\\n{\\\\n   concat : \\\\\\\"[ + tmp + ] \\\\\\\";\\\\n   parseStringBackToJSon\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"C++\",\"statistics\":{\"JavaScript\":1,\"C\":2,\"C++\":4,\"Python\":2,\"Java\":1,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":2,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"json\",\"pagination\",\"json-api\"],\"question_id\":31164535,\"creation_date\":1435761732,\"extraction_date\":\"2017-09-27T04:41:03.441Z\",\"title\":\"Can a json response can be partially paginate?\",\"codeblocks\":\"[\\\"{\\\\n  \\\\\\\"data\\\\\\\": [{\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"articles\\\\\\\",\\\\n    \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\": {\\\\n      \\\\\\\"title\\\\\\\": \\\\\\\"JSON API paints my bikeshed!\\\\\\\",\\\\n      \\\\\\\"body\\\\\\\": \\\\\\\"The shortest article. Ever.\\\\\\\"\\\\n    }\\\\n  }],\\\\n  \\\\\\\"included\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"people\\\\\\\",\\\\n      \\\\\\\"id\\\\\\\": 42,\\\\n      \\\\\\\"attributes\\\\\\\": {\\\\n        \\\\\\\"name\\\\\\\": \\\\\\\"John\\\\\\\"\\\\n      }\\\\n    },\\\\n    {\\\\n      ...annnd 80000 others\\\\n      }\\\\n    }\\\\n  ]\\\\n}\\\\n\\\",\\\"included\\\",\\\"included\\\",\\\"{\\\\n  \\\\\\\"data\\\\\\\": [{\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"articles\\\\\\\",\\\\n      \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n      \\\\\\\"attributes\\\\\\\": {\\\\n        \\\\\\\"title\\\\\\\": \\\\\\\"JSON API paints my bikeshed!\\\\\\\",\\\\n        \\\\\\\"body\\\\\\\": \\\\\\\"The shortest article. Ever.\\\\\\\"\\\\n      },\\\\n      \\\\\\\"relationships\\\\\\\": {\\\\n        \\\\\\\"users\\\\\\\": {\\\\n          \\\\\\\"link\\\\\\\": \\\\\\\"https://website.com/api/v1/articles/1/users.json\\\\\\\"\\\\n        }\\\\n      }\\\\n  }]\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"ember-data\",\"jsonserializer\",\"json-api\"],\"question_id\":31247905,\"creation_date\":1436191314,\"extraction_date\":\"2017-09-27T04:41:03.444Z\",\"title\":\"emberdata 1.13 convert json to JSONAPI\",\"codeblocks\":\"[\\\"{\\\\n  user: { id: 1, name: 'wecc', accounts: [1, 2] },\\\\n  accounts: [\\\\n    { id: 1, email: 'wecc@sweden.se' },\\\\n    { id: 2, email: 'wecc@greece.gr' }\\\\n  ]\\\\n}\\\",\\\"{\\\\n  data: { \\\\n    id: '1', \\\\n    type: 'user', \\\\n    attributes: {\\\\n      name: 'wecc'\\\\n    }, \\\\n    relationships: {\\\\n      accounts: {\\\\n        data: [\\\\n          { id: '1', type: 'account' },\\\\n          { id: '2', type: 'account' }\\\\n        ]\\\\n      }\\\\n    }\\\\n  },\\\\n  included: [{ \\\\n    id: '1',\\\\n    type: 'account',\\\\n    attributes: {\\\\n      email: 'wecc@sweden.se'\\\\n    }\\\\n  }, {\\\\n    id: '2',\\\\n    type: 'account',\\\\n    attributes: {\\\\n      email: 'wecc@greece.gr'\\\\n    }\\\\n  }]\\\\n}\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":-1,\"C++\":-1,\"Python\":0,\"Java\":-1,\"HTML\":0,\"CSS\":0,\"Ruby\":2,\"Go\":-1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"ember-data\",\"json-api\"],\"question_id\":31443513,\"creation_date\":1437006798,\"extraction_date\":\"2017-09-27T04:41:03.445Z\",\"title\":\"Ember data side loading with JSONAPI\",\"codeblocks\":\"[\\\"http://api.myApp.com/tags/123/products\\\",\\\"http://api.myApp.com/tags/123/products?include=sideload1,sideload2,sideload3\\\",\\\"  this.route('tags', function() {\\\\n    this.route('tag', { path: ':id' }, function() {\\\\n      this.route('products', function() {\\\\n\\\\n      });\\\\n    });\\\\n  });\\\\n\\\",\\\"// app/routes/tags/tag/products.js\\\\n\\\\nmodel() {\\\\n    return this.modelFor('tags.tag').get('products');\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"CSS\",\"statistics\":{\"JavaScript\":1,\"C\":-1,\"C++\":-1,\"Python\":0,\"Java\":-1,\"HTML\":0,\"CSS\":2,\"Ruby\":0,\"Go\":-1,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"active-model-serializers\",\"json-api\"],\"question_id\":31555999,\"creation_date\":1437548336,\"extraction_date\":\"2017-09-27T04:41:03.446Z\",\"title\":\"jsonapi and active_mode_serializers how to get relationship attributes in the response?\",\"codeblocks\":\"[\\\"{\\\\n\\\\\\\"data\\\\\\\": {\\\\n  \\\\\\\"id\\\\\\\": \\\\\\\"575\\\\\\\",\\\\n  \\\\\\\"type\\\\\\\": \\\\\\\"carts\\\\\\\",\\\\n  \\\\\\\"attributes\\\\\\\": {\\\\n    \\\\\\\"name\\\\\\\": \\\\\\\"cart 1\\\\\\\"\\\\n  },\\\\n  \\\\\\\"relationships\\\\\\\": {\\\\n    \\\\\\\"cart_products\\\\\\\": {\\\\n      \\\\\\\"data\\\\\\\": [\\\\n        {\\\\n          \\\\\\\"type\\\\\\\": \\\\\\\"cart_products\\\\\\\",\\\\n          \\\\\\\"id\\\\\\\": \\\\\\\"32\\\\\\\",\\\\n          \\\\\\\"attributes\\\\\\\": {\\\\n            \\\\\\\"product_id\\\\\\\": 456\\\\n          }\\\\n        }\\\\n      ]\\\\n    }\\\\n  }\\\\n}\\\\n}\\\\n\\\",\\\"{\\\\n\\\\\\\"data\\\\\\\": {\\\\n\\\\\\\"id\\\\\\\": \\\\\\\"575\\\\\\\",\\\\n\\\\\\\"type\\\\\\\": \\\\\\\"carts\\\\\\\",\\\\n\\\\\\\"attributes\\\\\\\": {\\\\n  \\\\\\\"name\\\\\\\": \\\\\\\"cart 1\\\\\\\"\\\\n},\\\\n\\\\\\\"relationships\\\\\\\": {\\\\n  \\\\\\\"cart_products\\\\\\\": {\\\\n    \\\\\\\"data\\\\\\\": [\\\\n      {\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"cart_products\\\\\\\",\\\\n        \\\\\\\"id\\\\\\\": \\\\\\\"32\\\\\\\",\\\\n\\\\n      }\\\\n    ]\\\\n  }\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"javascript\",\"ember.js\",\"ember-data\",\"json-api\"],\"question_id\":31805412,\"creation_date\":1438680175,\"extraction_date\":\"2017-09-27T04:41:03.447Z\",\"title\":\"Server side error processing in Ember 1.13.3\",\"codeblocks\":\"[\\\"handleResponse: function(status, headers, payload) {\\\\nif (payload.errors) {\\\\n  return new DS.InvalidError(payload.errors);\\\\n}\\\\nreturn this._super(...arguments);\\\\n\\\",\\\"            {\\\\n                errors: [\\\\n                    {\\\\n                        source: {pointer: 'data'},\\\\n                        detail: 'Not saved'\\\\n                    }\\\\n                ]\\\\n            }\\\\n\\\",\\\"job.save().then(function() {\\\\n    console.log('OK');\\\\n  }).catch(function(err) {\\\\n    console.log('Error: ', err, ' Model ', job.get('isError'));\\\\n  });\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":6,\"C\":-1,\"C++\":1,\"Python\":2,\"Java\":2,\"HTML\":0,\"CSS\":2,\"Ruby\":0,\"Go\":-1,\"PHP\":3,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"ember-data\",\"json-api\"],\"question_id\":32142184,\"creation_date\":1440165425,\"extraction_date\":\"2017-09-27T04:41:03.449Z\",\"title\":\"Ember data JSONAPI complex attribute data\",\"codeblocks\":\"[\\\"data: [\\\\n    {\\\\n        type: \\\\\\\"filter-group\\\\\\\",\\\\n        id: \\\\\\\"556d7f5fa1f9de08500ef4e8_1\\\\\\\",\\\\n        attributes: {\\\\n            name: \\\\\\\"Colour\\\\\\\",\\\\n            created-date: \\\\\\\"0001-01-01T00:00:00Z\\\\\\\",\\\\n            active: true,\\\\n            filters: [\\\\n                {\\\\n                    id: \\\\\\\"556d7f5fa1f9de08500ef4e8_1_1\\\\\\\",\\\\n                    name: \\\\\\\"Red\\\\\\\",\\\\n                    created-date: \\\\\\\"0001-01-01T00:00:00Z\\\\\\\",\\\\n                    active: true\\\\n                },\\\\n                {\\\\n                    id: \\\\\\\"556d7f5fa1f9de08500ef4e8_1_2\\\\\\\",\\\\n                    name: \\\\\\\"Blue\\\\\\\",\\\\n                    created-date: \\\\\\\"0001-01-01T00:00:00Z\\\\\\\",\\\\n                    active: true\\\\n                },\\\\n                {\\\\n                    id: \\\\\\\"556d7f5fa1f9de08500ef4e8_1_3\\\\\\\",\\\\n                    name: \\\\\\\"Green\\\\\\\",\\\\n                    created-date: \\\\\\\"0001-01-01T00:00:00Z\\\\\\\",\\\\n                    active: true\\\\n                }\\\\n            ]\\\\n        }\\\\n    }\\\\n]\\\\n\\\",\\\"// models/filter-group.js\\\\nimport DS from 'ember-data';\\\\n\\\\nexport default DS.Model.extend({\\\\n  name: DS.attr('string'),\\\\n  active: DS.attr('boolean'),\\\\n  client: DS.belongsTo('client', { embedded: 'always' }),\\\\n  filters: DS.hasMany('filter', { embedded: 'always' })\\\\n});\\\\n\\\",\\\"// models/filter.js\\\\nimport DS from 'ember-data';\\\\n\\\\nexport default DS.Model.extend({\\\\n  name: DS.attr('string'),\\\\n  active: DS.attr('boolean'),\\\\n  createdDate: DS.attr('date'),\\\\n  filterGroup: DS.belongsTo('filter-group', { embedded: 'always' })\\\\n});\\\\n\\\",\\\"{{#each filterGroups as |filterGroup|}}\\\\n    <h6>{{filterGroup.name}}</h6>\\\\n\\\\n    {{#each filterGroup.filters as |filter|}}\\\\n        -- Filter output here --\\\\n    {{/each}}\\\\n{{/each}}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":-1,\"C++\":-1,\"Python\":0,\"Java\":-1,\"HTML\":2,\"CSS\":2,\"Ruby\":0,\"Go\":-1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"ember-data\",\"json-api\"],\"question_id\":32302509,\"creation_date\":1440980855,\"extraction_date\":\"2017-09-27T04:41:03.450Z\",\"title\":\"Add Ember Data query helper method\",\"codeblocks\":\"[\\\"/users?filter[simple][name]=John\\\\n\\\",\\\"this.store.query('users', {\\\\n  filter: {\\\\n    simple: {\\\\n      name: 'John'\\\\n    }\\\\n  }\\\\n});\\\\n\\\",\\\"this.store.simpleQuery('users', { name: 'John' });\\\\n\\\",\\\"query()\\\",\\\"{ filter: { simple: ... } }\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":-1,\"C++\":-1,\"Python\":0,\"Java\":-1,\"HTML\":0,\"CSS\":2,\"Ruby\":0,\"Go\":-1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ios\",\"json\",\"json-api\"],\"question_id\":32324292,\"creation_date\":1441086163,\"extraction_date\":\"2017-09-27T04:41:03.451Z\",\"title\":\"extract an attribute of a specific type from JSON API\",\"codeblocks\":\"[\\\"NSJSONSerialization\\\",\\\"...\\\\\\\"included\\\\\\\":[{\\\\\\\"id\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"name1\\\\\\\",\\\\\\\"attributes\\\\\\\":{...}},{\\\\\\\"id\\\\\\\":\\\\\\\"\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"form-data\\\\\\\",\\\\\\\"attributes\\\\\\\":{..}}]}\\\\n\\\",\\\"included =     (\\\\n            {\\\\n        attributes =             {..};id = \\\\\\\"\\\\\\\";\\\\n        type = \\\\\\\"name1\\\\\\\";\\\\n    },\\\\n            {\\\\n        attributes =             {...};\\\\n        id = \\\\\\\"\\\\\\\";\\\\n        type = \\\\\\\"name2\\\\\\\";\\\\n    }\\\\n);\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":1,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ember-cli\",\"json-api\",\"ember-cli-mirage\"],\"question_id\":32343873,\"creation_date\":1441162012,\"extraction_date\":\"2017-09-27T04:41:03.453Z\",\"title\":\"Debugging Ember-cli-mirage when routes are not being called\",\"codeblocks\":\"[\\\"export default function() {\\\\n    this.urlPrefix = 'https://myserver/';\\\\n    this.namespace = 'api/v1';\\\\n\\\\n    this.get('/machines', function(db, request) {\\\\n        return {\\\\n            data: db.machines.map(attrs => (\\\\n              {\\\\n                  type: 'machines', \\\\n                  id: attrs.id, \\\\n                  attributes: attrs \\\\n              }\\\\n            ))\\\\n        };\\\\n    });\\\\n\\\\n    this.get('/machines/:id', function(db, request){\\\\n        let id = request.params.id;\\\\n        debugger;\\\\n\\\\n        return {\\\\n\\\\n            data: {\\\\n                type: 'machines',\\\\n                id: id,\\\\n                attributes: db.machines.find(id),\\\\n                relationships:{\\\\n                    \\\\\\\"service-orders\\\\\\\": db[\\\\\\\"service-orders\\\\\\\"].where({machineId: id})\\\\n                }\\\\n            }\\\\n        };\\\\n    });\\\\n\\\\n    this.get('/machines/:machine_id/service-orders', function(db, request){\\\\n        debugger; // this never gets caught\\\\n    });\\\\n}\\\\n\\\",\\\"export default Ember.Route.extend(MachineFunctionalRouteMixin, {\\\\n  model: function() {\\\\n    var machine = this.modelFor('machines.show');\\\\n    var serviceOrders = machine.get('serviceOrders');\\\\n    return serviceOrders;\\\\n  },\\\\n\\\\n  setupController: function(controller, model) {\\\\n      this._super(controller, model);\\\\n  }\\\\n});\\\\n\\\",\\\"export default Ember.Route.extend({\\\\n  model: function(params) {\\\\n    var machine = this.store.find('machine', params.machine_id);\\\\n    return machine;\\\\n  },\\\\n  setupController: function(controller, model) {\\\\n    this._super(controller, model);\\\\n    var machinesController = this.controllerFor('machines');\\\\n    machinesController.set('attrs.currentMachine', model);\\\\n  }\\\\n});\\\\n\\\",\\\"machine.get('serviceOrders');\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":5,\"C\":-1,\"C++\":-1,\"Python\":0,\"Java\":1,\"HTML\":0,\"CSS\":2,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"rest\",\"json-api\"],\"question_id\":32355422,\"creation_date\":1441202791,\"extraction_date\":\"2017-09-27T04:41:03.454Z\",\"title\":\"What is the RESTful way of representing grouped data?\",\"codeblocks\":\"[\\\"| id | title | likes | created_at | user_id |\\\",\\\"user_id\\\",\\\"api/posts?group_by=user_id\\\",\\\"{\\\\n  \\\\\\\"results\\\\\\\": [{\\\\n    \\\\\\\"1\\\\\\\": [ // because we grouped by id\\\\n      {id: 1, title: \\\\\\\"some title\\\\\\\", likes: 12 ...}\\\\n      ...\\\\n    ] \\\\n  }]\\\\n}\\\\n\\\",\\\"{\\\\n  results: [{\\\\n    \\\\\\\"user_id\\\\\\\": 1\\\\n      \\\\\\\"posts\\\\\\\": [\\\\n        {id: 1, title: \\\\\\\"some title\\\\\\\", likes: 12 ...}\\\\n        ...\\\\n      ] \\\\n  }]\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"rest\",\"domain-driven-design\",\"json-api\"],\"question_id\":32699435,\"creation_date\":1442850438,\"extraction_date\":\"2017-09-27T04:41:03.454Z\",\"title\":\"JsonApi method calls\",\"codeblocks\":\"[\\\"POST api/v1/customer/1/deactivate\\\\nPOST api/v1/customer/1/activate\\\\n\\\"]\",\"languages\":{\"detected\":\"Unknown\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ios\",\"restkit\",\"json-api\"],\"question_id\":32844992,\"creation_date\":1443532495,\"extraction_date\":\"2017-09-27T04:41:03.455Z\",\"title\":\"Map JSON APi-style &quot;type&quot; attribute to object classes with RestKit\",\"codeblocks\":\"[\\\"article\\\",\\\"{\\\\n  \\\\\\\"articles\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"title\\\\\\\": \\\\\\\"RestKit Object Mapping Intro\\\\\\\",\\\\n      \\\\\\\"author\\\\\\\": \\\\\\\"Blake Watters\\\\\\\",\\\\n      \\\\\\\"id\\\\\\\": 1\\\\n    }\\\\n  ]\\\\n}\\\\n\\\",\\\"{\\\\n  \\\\\\\"data\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"articles\\\\\\\",\\\\n      \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n      \\\\\\\"attributes\\\\\\\": {\\\\n        \\\\\\\"title\\\\\\\": \\\\\\\"JSON API paints my bikeshed!\\\\\\\",\\\\n        \\\\\\\"author\\\\\\\": \\\\\\\"Steve Klabnik et al.\\\\\\\"\\\\n      }\\\\n    }\\\\n  ]\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"rest\",\"json-api\",\"hypermedia\"],\"question_id\":33527000,\"creation_date\":1446654413,\"extraction_date\":\"2017-09-27T04:41:03.458Z\",\"title\":\"How does JSONAPI translate type/id into navigable URLs?\",\"codeblocks\":\"[\\\"{\\\\n  \\\\\\\"type\\\\\\\": \\\\\\\"articles\\\\\\\",\\\\n  \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n  \\\\\\\"attributes\\\\\\\": {\\\\n    \\\\\\\"title\\\\\\\": \\\\\\\"Rails is Omakase\\\\\\\"\\\\n  },\\\\n  \\\\\\\"relationships\\\\\\\": {\\\\n    \\\\\\\"author\\\\\\\": {\\\\n      \\\\\\\"links\\\\\\\": {\\\\n        \\\\\\\"self\\\\\\\": \\\\\\\"/articles/1/relationships/author\\\\\\\",\\\\n        \\\\\\\"related\\\\\\\": \\\\\\\"/articles/1/author\\\\\\\"\\\\n      },\\\\n      \\\\\\\"data\\\\\\\": { \\\\\\\"type\\\\\\\": \\\\\\\"people\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"9\\\\\\\" }\\\\n    }\\\\n  }\\\\n}\\\\n\\\",\\\"\\\\\\\"data\\\\\\\": { \\\\\\\"type\\\\\\\": \\\\\\\"people\\\\\\\", \\\\\\\"id\\\\\\\", \\\\\\\"9\\\\\\\" }\\\\n\\\",\\\"article\\\",\\\"/articles/1/author\\\",\\\"data { ... }\\\",\\\"id=9\\\",\\\"/people/9\\\",\\\"type/id\\\",\\\"type+id\\\",\\\"GET /{type}/{id}\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"ember-data\",\"json-api\"],\"question_id\":33694418,\"creation_date\":1447423122,\"extraction_date\":\"2017-09-27T04:41:03.458Z\",\"title\":\"How do you handle large relationship data attributes and compound documents?\",\"codeblocks\":\"[\\\"data.relationships.comments\\\",\\\"{\\\\n  \\\\\\\"data\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"articles\\\\\\\",\\\\n      \\\\\\\"id\\\\\\\": 1,\\\\n      \\\\\\\"attributes\\\\\\\": {\\\\n        \\\\\\\"title\\\\\\\": \\\\\\\"Some title\\\\\\\",\\\\n      },\\\\n      \\\\\\\"relationships\\\\\\\": {\\\\n        \\\\\\\"comments\\\\\\\": {\\\\n          \\\\\\\"links\\\\\\\": {\\\\n            \\\\\\\"related\\\\\\\": \\\\\\\"https://www.foo.com/api/v1/articles/1/comments\\\\\\\"\\\\n          },\\\\n          \\\\\\\"data\\\\\\\": [\\\\n            { \\\\\\\"type\\\\\\\": \\\\\\\"comment\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\" }\\\\n            ...\\\\n            { \\\\\\\"type\\\\\\\": \\\\\\\"comment\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"2000\\\\\\\" }\\\\n          ]\\\\n        }\\\\n      }\\\\n    }\\\\n  ],\\\\n  \\\\\\\"included\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"comments\\\\\\\",\\\\n      \\\\\\\"id\\\\\\\": 1,\\\\n      \\\\\\\"attributes\\\\\\\": {\\\\n        \\\\\\\"body\\\\\\\": \\\\\\\"Lorem ipusm\\\\\\\",\\\\n      }\\\\n    },\\\\n    .....\\\\n    {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"comments\\\\\\\",\\\\n      \\\\\\\"id\\\\\\\": 2000,\\\\n      \\\\\\\"attributes\\\\\\\": {\\\\n        \\\\\\\"body\\\\\\\": \\\\\\\"Lorem ipusm\\\\\\\",\\\\n      }\\\\n    },\\\\n  ]\\\\n}\\\\n\\\",\\\"included\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"json\",\"api\",\"json-api\"],\"question_id\":33743414,\"creation_date\":1447703345,\"extraction_date\":\"2017-09-27T04:41:03.459Z\",\"title\":\"How do I supply multiple resources to be defined when creating a resource?\",\"codeblocks\":\"[\\\"POST /photos HTTP/1.1\\\\nContent-Type: application/vnd.api+json\\\\nAccept: application/vnd.api+json\\\\n\\\\n{\\\\n  \\\\\\\"data\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"photos\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\": {\\\\n      \\\\\\\"title\\\\\\\": \\\\\\\"Ember Hamster\\\\\\\",\\\\n      \\\\\\\"src\\\\\\\": \\\\\\\"http://example.com/images/productivity.png\\\\\\\"\\\\n    },\\\\n    \\\\\\\"relationships\\\\\\\": {\\\\n      \\\\\\\"photographer\\\\\\\": {\\\\n        \\\\\\\"data\\\\\\\": { \\\\\\\"type\\\\\\\": \\\\\\\"people\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"9\\\\\\\" }\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"ember-data\",\"json-api\"],\"question_id\":34208202,\"creation_date\":1449768675,\"extraction_date\":\"2017-09-27T04:41:03.461Z\",\"title\":\"How to include nested relationships?\",\"codeblocks\":\"[\\\"{\\\\n  data: [\\\\n    {\\\\n      id: 1,\\\\n      type: \\\\\\\"articles\\\\\\\",\\\\n      attributes: { ... },\\\\n      relationships: {\\\\n        author: { ... },\\\\n        comments: [{ ... }, { ... }],\\\\n      },\\\\n      ...\\\\n    },\\\\n    { ... }\\\\n  ]\\\\n  included: [\\\\n    {\\\\n      author: { ... },\\\\n      comment: { ... },\\\\n      comment: { ... }\\\\n    {\\\\n  ]\\\\n}\\\\n\\\",\\\"{\\\\n  data: [\\\\n    {\\\\n      id: 1,\\\\n      type: \\\\\\\"articles\\\\\\\",\\\\n      attributes: { ... },\\\\n      relationships: {\\\\n        author: { ... },\\\\n        comments: [{ ... }, { ... }]\\\\n      },\\\\n      ...\\\\n    },\\\\n    { ... }\\\\n  ]\\\\n  included: [\\\\n    {\\\\n      author: { ... },\\\\n      comment: { ... },\\\\n      comment: { ... },\\\\n      user: { ... },\\\\n      user: { ... }\\\\n    {\\\\n  ]\\\\n}\\\\n\\\",\\\"users\\\",\\\"relationship\\\",\\\"included\\\",\\\"relationship\\\",\\\"user\\\",\\\"data.relationships.comments\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"django\",\"serialization\",\"django-rest-framework\",\"json-api\"],\"question_id\":34547111,\"creation_date\":1451568133,\"extraction_date\":\"2017-09-27T04:41:03.465Z\",\"title\":\"Serialize a non-directly related relationship\",\"codeblocks\":\"[\\\"Project\\\",\\\"User\\\",\\\"class Project:\\\\n    artist = models.ForeignKey(User)\\\\n\\\",\\\"Product\\\",\\\"Project\\\",\\\"class Product:\\\\n    project = models.ForeignKey(Project)\\\\n\\\",\\\"artist\\\",\\\"Product\\\",\\\"Project\\\",\\\"artist\\\",\\\"Product\\\",\\\"Product\\\",\\\"class Product(models.Model):\\\\n...\\\\n    @property\\\\n    def artist(self):\\\\n        return self.project.artist.id\\\\n\\\",\\\"class ProductSerializer(serializers.ModelSerializer):\\\\n\\\\n    class Meta:\\\\n        model = Product\\\\n        fields = ('id', 'project', 'artist', 'name', 'description', 'compatibility', 'format', 'type', 'created', 'modified', 'price', 'bought', 'image', 'price_range')\\\\n\\\",\\\".id\\\",\\\"class Product(models.Model):\\\\n...\\\\n    @property\\\\n    def artist(self):\\\\n        return self.project.artist\\\\n\\\",\\\"TypeError: <User: leia-70823> is not JSON serializable\\\\n\\\",\\\"JSONApi\\\",\\\"attributes\\\",\\\"{\\\\n  \\\\\\\"data\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"product\\\\\\\",\\\\n    \\\\\\\"id\\\\\\\": \\\\\\\"101\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\": {\\\\n      \\\\\\\"artist\\\\\\\": 306,\\\\n      \\\\\\\"name\\\\\\\": \\\\\\\"big Product\\\\\\\",\\\\n      \\\\\\\"description\\\\\\\": \\\\\\\"Veniam modi doloremque ducimus. Sit aut officiis suscipit libero itaque. Animi sit molestiae corrupti sed qui impedit.\\\\\\\",\\\\n      \\\\\\\"compatibility\\\\\\\": 10,\\\\n      \\\\\\\"format\\\\\\\": 6,\\\\n      \\\\\\\"type\\\\\\\": 2,\\\\n      \\\\\\\"created\\\\\\\": \\\\\\\"2001-10-19\\\\\\\",\\\\n      \\\\\\\"modified\\\\\\\": \\\\\\\"1981-02-20\\\\\\\",\\\\n      \\\\\\\"price\\\\\\\": 861,\\\\n      \\\\\\\"bought\\\\\\\": 3939,\\\\n      \\\\\\\"image\\\\\\\": \\\\\\\"http:\\\\\\\\/\\\\\\\\/localhost:15013\\\\\\\\/media\\\\\\\\/categories\\\\\\\\/l2.png\\\\\\\",\\\\n      \\\\\\\"price-range\\\\\\\": 1\\\\n    },\\\\n    \\\\\\\"relationships\\\\\\\": {\\\\n      \\\\\\\"project\\\\\\\": {\\\\n        \\\\\\\"data\\\\\\\": {\\\\n          \\\\\\\"type\\\\\\\": \\\\\\\"project\\\\\\\",\\\\n          \\\\\\\"id\\\\\\\": \\\\\\\"185\\\\\\\"\\\\n        }\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\\n\\\",\\\"relationships\\\"]\",\"languages\":{\"detected\":\"Python\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":4,\"Java\":1,\"HTML\":0,\"CSS\":0,\"Ruby\":2,\"Go\":2,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"django\",\"ember.js\",\"ember-data\",\"django-rest-framework\",\"json-api\"],\"question_id\":34588083,\"creation_date\":1451899863,\"extraction_date\":\"2017-09-27T04:41:03.468Z\",\"title\":\"POST requests with EmberData and Django REST Framework\",\"codeblocks\":\"[\\\"django-rest-framework\\\",\\\"Ember\\\",\\\"EmberData\\\",\\\"GET\\\",\\\"POST\\\",\\\"EmberData\\\",\\\"{\\\\n  \\\\\\\"data\\\\\\\": {\\\\n    \\\\\\\"attributes\\\\\\\": {\\\\n      \\\\\\\"name\\\\\\\": \\\\\\\"The project name\\\\\\\",\\\\n      \\\\\\\"description\\\\\\\": \\\\\\\"The project description\\\\\\\",\\\\n      \\\\\\\"price\\\\\\\": 123\\\\n    },\\\\n    \\\\\\\"relationships\\\\\\\": {\\\\n      \\\\\\\"onwer\\\\\\\": {\\\\n        \\\\\\\"data\\\\\\\": null\\\\n      }\\\\n    },\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"projects\\\\\\\"\\\\n  }\\\\n}\\\\n\\\",\\\"Page not found ... The current URL, api/projects, didn't match any of these\\\\n\\\",\\\"from rest_framework.routers import DefaultRouter\\\\n\\\\nfrom .viewsets.projects import ProjectViewSet\\\\n\\\\n\\\\nrouter = DefaultRouter()\\\\n...\\\\nrouter.register(r'projects', ProjectViewSet)\\\\n...\\\\n\\\",\\\"ViewSet\\\",\\\"from rest_framework import viewsets\\\\nfrom rest_framework import filters\\\\n\\\\nfrom vwrks.models import Project\\\\n\\\\nfrom ..serializers import ProjectSerializer\\\\n\\\\nclass ProjectViewSet(viewsets.ModelViewSet):\\\\n    \\\\\\\"\\\\\\\"\\\\\\\"\\\\n    A viewset for viewing and editing Project instances.\\\\n    \\\\\\\"\\\\\\\"\\\\\\\"\\\\n    serializer_class = ProjectSerializer\\\\n    queryset = Project.objects.all()\\\\n    filter_backends = (filters.DjangoFilterBackend, filters.SearchFilter)\\\\n    filter_fields = ('seller', 'artist', 'subcategory')\\\\n    search_fields = ('name', 'description')\\\\n\\\",\\\"ViewSet\\\",\\\".create()\\\",\\\"POST\\\",\\\"/projects\\\",\\\"EmberData\\\",\\\"/projects/\\\",\\\"# EmberData does POST to /projects (not /projects/), so we need this:\\\\nAPPEND_SLASH = False\\\\n\\\",\\\"Django\\\",\\\"project-create\\\",\\\"project-list\\\",\\\"project-detail\\\",\\\"^api/ ^projects/$ [name='project-list']\\\\n^api/ ^projects\\\\\\\\.(?P<format>[a-z0-9]+)/?$ [name='project-list']\\\\n^api/ ^projects/(?P<pk>[^/.]+)/$ [name='project-detail']\\\\n^api/ ^projects/(?P<pk>[^/.]+)\\\\\\\\.(?P<format>[a-z0-9]+)/?$ [name='project-detail']\\\\n\\\",\\\"POST\\\",\\\"EmberData\\\",\\\"drf\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":3,\"C\":0,\"C++\":1,\"Python\":2,\"Java\":2,\"HTML\":2,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"django\",\"ember.js\",\"ember-data\",\"django-rest-framework\",\"json-api\"],\"question_id\":34595986,\"creation_date\":1451926510,\"extraction_date\":\"2017-09-27T04:41:03.470Z\",\"title\":\"Errors not populated\",\"codeblocks\":\"[\\\"{\\\\n  \\\\\\\"errors\\\\\\\": {\\\\n    \\\\\\\"extra_comments\\\\\\\": [\\\\n      \\\\\\\"This field may not be null.\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"name\\\\\\\": [\\\\n      \\\\\\\"This field may not be null.\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"due_date\\\\\\\": [\\\\n      \\\\\\\"This field may not be null.\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"price\\\\\\\": [\\\\n      \\\\\\\"This field may not be null.\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"payment_type\\\\\\\": [\\\\n      \\\\\\\"This field may not be null.\\\\\\\"\\\\n    ],\\\\n    \\\\\\\"description\\\\\\\": [\\\\n      \\\\\\\"This field may not be null.\\\\\\\"\\\\n    ]\\\\n  }\\\\n}\\\\n\\\",\\\"{{#each model.errors.messages as |message|}}\\\\n  <div class=\\\\\\\"error\\\\\\\">\\\\n    {{message}}\\\\n  </div>\\\\n{{/each}}\\\\n\\\",\\\"model.errors\\\",\\\"model.errors\\\",\\\"Computed\\\",\\\"django-rest-framework-json-api\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":3,\"C\":1,\"C++\":0,\"Python\":0,\"Java\":1,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"json\",\"json-api\"],\"question_id\":34788122,\"creation_date\":1452769899,\"extraction_date\":\"2017-09-27T04:41:03.470Z\",\"title\":\"JSON-API: why do we need to define an ID member when updating a resource?\",\"codeblocks\":\"[\\\"{\\\\n  \\\\\\\"data\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"articles\\\\\\\",\\\\n    \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\": {\\\\n      \\\\\\\"foo\\\\\\\": \\\\\\\"bar\\\\\\\"\\\\n    }\\\\n   }\\\\n }\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"json-api\"],\"question_id\":35000017,\"creation_date\":1453747715,\"extraction_date\":\"2017-09-27T04:41:03.471Z\",\"title\":\"Ember Model handles validation errors returned from backend server\",\"codeblocks\":\"[\\\"{\\\\\\\"errors\\\\\\\":[{\\\\\\\"title\\\\\\\":\\\\\\\"name is empty\\\\\\\"}, {\\\\\\\"title\\\\\\\":\\\\\\\"other error\\\\\\\"}]}\\\\n\\\",\\\"{{#each post.errors.title as |error|}}\\\\n  <div class=\\\\\\\"error\\\\\\\">{{error.message}}</div>\\\\n{{/each}}\\\\n{{#each post.errors.body as |error|}}\\\\n  <div class=\\\\\\\"error\\\\\\\">{{error.message}}</div>\\\\n{{/each}}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":1,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"rest\",\"ember.js\",\"json-api\"],\"question_id\":35443559,\"creation_date\":1455658883,\"extraction_date\":\"2017-09-27T04:41:03.473Z\",\"title\":\"Ember understanding serializers and adapters\",\"codeblocks\":\"[\\\"{\\\\\\\"data\\\\\\\":[{\\\\\\\"id\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"type\\\\\\\":\\\\\\\"projects\\\\\\\",\\\\\\\"attributes\\\\\\\":{\\\\\\\"title\\\\\\\":\\\\\\\"one\\\\\\\"},\\\\\\\"links...\\\",\\\"Encountered \\\\\\\"data\\\\\\\" in payload, but no model was found for model name \\\\\\\"datum\\\\\\\" (resolved model name using smart-task-ember@serializer:application:.modelNameFromPayloadKey(\\\\\\\"data\\\\\\\")\\\",\\\"{\\\\\\\"data\\\\\\\"=>{\\\\\\\"attributes\\\\\\\"=>{\\\\\\\"title\\\\\\\"=>\\\\\\\"test\\\\\\\"}, \\\\\\\"type\\\\\\\"=>\\\\\\\"projects\\\\\\\"}, \\\\\\\"controller\\\\\\\"=>\\\\\\\"projects\\\\\\\", \\\\\\\"action\\\\\\\"=>\\\\\\\"create\\\\\\\", \\\\\\\"project\\\\\\\"=>{}}\\\",\\\"{\\\\\\\"project\\\\\\\"=>{\\\\\\\"title\\\\\\\"=>\\\\\\\"qwe\\\\\\\"}, \\\\\\\"controller\\\\\\\"=>\\\\\\\"projects\\\\\\\", \\\\\\\"action\\\\\\\"=>\\\\\\\"create\\\\\\\"}\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":2,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"api\",\"express\",\"endpoint\",\"api-design\",\"json-api\"],\"question_id\":35689043,\"creation_date\":1456698197,\"extraction_date\":\"2017-09-27T04:41:03.473Z\",\"title\":\"JSON API design - express\",\"codeblocks\":\"[\\\"example.com/user/RandomName\\\\nexample.com/user/1234556778898?id=true\\\\n\\\",\\\"api.get('user/:input', function(req, res) {\\\\n  if(req.query.id) {\\\\n    User.find({ '_id': req.params.input }, cb);\\\\n  } else {\\\\n    User.find({ 'name': req.params.input }, cb);\\\\n  } \\\\n};\\\\n\\\"]\",\"languages\":{\"detected\":\"Java\",\"statistics\":{\"JavaScript\":1,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":2,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":-1,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"ember-cli\",\"json-api\"],\"question_id\":35711058,\"creation_date\":1456785131,\"extraction_date\":\"2017-09-27T04:41:03.475Z\",\"title\":\"hasMany relationship with JSON links\",\"codeblocks\":\"[\\\"/posts/{postID}/comments\\\",\\\"export default DS.Model.extend({\\\\n  name: DS.attr('string'),\\\\n  comments: DS.hasMany('comment', {async:true})\\\\n});\\\\n\\\",\\\"export default DS.Model.extend({\\\\n  name: DS.attr('string')\\\\n});\\\\n\\\",\\\"<ul>\\\\n  {{#each model as |post|}}\\\\n    {{#each post.comments as |comment|}}\\\\n      <li>{{comment.name}}</li>\\\\n    {{/each}}\\\\n  {{/each}}\\\\n</ul>\\\\n\\\",\\\"  \\\\\\\"data\\\\\\\": [{\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"posts\\\\\\\",\\\\n    \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\": {\\\\n      \\\\\\\"id\\\\\\\": 1\\\\n      \\\\\\\"name\\\\\\\": \\\\\\\"my title\\\\\\\"\\\\n    },\\\\n    \\\\\\\"links\\\\\\\": {\\\\n      \\\\\\\"comments\\\\\\\": \\\\\\\"comments\\\\\\\"\\\\n    }\\\\n  }]\\\\n\\\",\\\"/posts/1/comments\\\",\\\"{{#each}}\\\",\\\"post.comments\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":-1,\"C++\":-1,\"Python\":0,\"Java\":-1,\"HTML\":2,\"CSS\":2,\"Ruby\":0,\"Go\":-1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"json\",\"swagger\",\"rails-api\",\"json-api\"],\"question_id\":35786472,\"creation_date\":1457055585,\"extraction_date\":\"2017-09-27T04:41:03.476Z\",\"title\":\"Swagger Docs index method\",\"codeblocks\":\"[\\\"api/v1/users.json\\\",\\\"rake swagger:docs\\\",\\\"Api::V1::UsersController\\\",\\\"  swagger_api :index do\\\\n    summary 'Returns list of users'\\\\n    notes '/api/v1/users'\\\\n  end\\\\n\\\\n  def index\\\\n    @users = User.all\\\\n    render(json: { users: ActiveModel::ArraySerializer.new(@users, each_serializer: Api::V1::UserSerializer) })\\\\n  end\\\\n\\\",\\\"/api/v1/users.json\\\",\\\"{\\\\n  \\\\\\\"apiVersion\\\\\\\": \\\\\\\"1.0\\\\\\\",\\\\n  \\\\\\\"swaggerVersion\\\\\\\": \\\\\\\"1.2\\\\\\\",\\\\n  \\\\\\\"basePath\\\\\\\": \\\\\\\"http://localhost:3000\\\\\\\",\\\\n  \\\\\\\"resourcePath\\\\\\\": \\\\\\\"users\\\\\\\",\\\\n  \\\\\\\"apis\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"path\\\\\\\": \\\\\\\"/api/v1/users.json\\\\\\\",\\\\n      \\\\\\\"operations\\\\\\\": [\\\\n        {\\\\n          \\\\\\\"summary\\\\\\\": \\\\\\\"Returns list of users\\\\\\\",\\\\n          \\\\\\\"notes\\\\\\\": \\\\\\\"/api/v1/users\\\\\\\",\\\\n          \\\\\\\"nickname\\\\\\\": \\\\\\\"Api::V1::Users#index\\\\\\\",\\\\n          \\\\\\\"method\\\\\\\": \\\\\\\"get\\\\\\\"\\\\n        }\\\\n      ]\\\\n    },\\\\n    {\\\\n      \\\\\\\"path\\\\\\\": \\\\\\\"/api/v1/users/{id}.json\\\\\\\",\\\\n      \\\\\\\"operations\\\\\\\": [\\\\n        {\\\\n          \\\\\\\"summary\\\\\\\": \\\\\\\"Returns a user\\\\\\\",\\\\n          \\\\\\\"notes\\\\\\\": \\\\\\\"/api/v1/users/:id\\\\\\\",\\\\n          \\\\\\\"parameters\\\\\\\": [\\\\n            {\\\\n              \\\\\\\"paramType\\\\\\\": \\\\\\\"path\\\\\\\",\\\\n              \\\\\\\"name\\\\\\\": \\\\\\\"id\\\\\\\",\\\\n              \\\\\\\"type\\\\\\\": \\\\\\\"integer\\\\\\\",\\\\n              \\\\\\\"description\\\\\\\": \\\\\\\"User Id\\\\\\\",\\\\n              \\\\\\\"required\\\\\\\": false\\\\n            }\\\\n          ],\\\\n          \\\\\\\"nickname\\\\\\\": \\\\\\\"Api::V1::Users#show\\\\\\\",\\\\n          \\\\\\\"method\\\\\\\": \\\\\\\"get\\\\\\\"\\\\n        }\\\\n      ]\\\\n    }\\\\n  ],\\\\n  \\\\\\\"authorizations\\\\\\\": null\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":3,\"C\":-1,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":3,\"Go\":-1,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"json\",\"ruby-on-rails-4\",\"kaminari\",\"active-model-serializers\",\"json-api\"],\"question_id\":36301450,\"creation_date\":1459319937,\"extraction_date\":\"2017-09-27T04:41:03.478Z\",\"title\":\"Get kaminari pagination links in the JSON generated by the active model serializer\",\"codeblocks\":\"[\\\"#app/serializers/admin_serializer.rb\\\\nclass AdminSerializer < ActiveModel::Serializer\\\\n  attributes :id, :email, :access_locked?\\\\nend\\\\n\\\",\\\"@admins = @search.result(:distinct => true).page(params[:page][:number]).per(10)\\\",\\\"@search = Admin.search(params[:q])\\\",\\\"ActiveModel::SerializableResource.new(@admins.to_a).as_json\\\",\\\"@admins\\\",\\\"to_a\\\",\\\"render :json => @admins\\\"]\",\"languages\":{\"detected\":\"Ruby\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":2,\"Python\":0,\"Java\":2,\"HTML\":0,\"CSS\":0,\"Ruby\":5,\"Go\":0,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"javascript\",\"angularjs\",\"angular-promise\",\"json-api\"],\"question_id\":36438927,\"creation_date\":1459899466,\"extraction_date\":\"2017-09-27T04:41:03.483Z\",\"title\":\"AngularJS - function promisified with $q doesn&#39;t resolve on tests\",\"codeblocks\":\"[\\\"public deserialize(type: string, data: any): any {\\\\n\\\\n// get the predefined options for resource type\\\\nlet deserializeOpts: any = this.deserializeOpts[type];\\\\n\\\\n// use jsonapi-serializer\\\\n// the options are not working\\\\nlet deserializer: any = new JAS.Deserializer({});\\\\n\\\\nconsole.log(data);\\\\n// return a promise with the parsed object\\\\nreturn this._$q((resolve: any, reject: any) => {\\\\n  deserializer.deserialize(data, (err: any, result: any) => {\\\\n    if (result) {\\\\n      console.log(resolve);\\\\n      resolve(result);\\\\n    } else {\\\\n      console.log(err);\\\\n      reject(err);\\\\n    }\\\\n  });\\\\n});\\\\n}\\\\n\\\",\\\"it('should flatten jsonapi user', function (done) {\\\\n  var deserialized;\\\\n  JsonapiParser.deserialize(type, apiUser).then(\\\\n    (result) => {\\\\n      deserialized = result;\\\\n      expect(deserialized).toEqual(apiUser);\\\\n      done();\\\\n    }\\\\n  );\\\\n});\\\\n\\\",\\\"// returns the promise so controller can display the errors\\\\nreturn this.$http.get(url)\\\\n  .then(\\\\n    (response: any) => {\\\\n      if (response.data.data.length !== 0) {// deserialize data\\\\n        return this._deserializer.deserialize('activities', response.data) // the deserializer service is called;\\\\n      } else { // throw an error if data is empty\\\\n        return this.$q.reject({ error: this.ACTIVITY.empty });\\\\n      }\\\\n    },\\\\n    () => {\\\\n      return this.$q.reject({ error: this.ACTIVITY.connectionError });\\\\n    }\\\\n  ).then(\\\\n    (deserialized: any) => { // data is copied to original list so it doesn't lose it's bindings\\\\n      angular.copy(deserialized, this.list); // the result from the deserializer is used\\\\n      console.log(deserialized);\\\\n      return this.list;\\\\n  });\\\\n\\\",\\\"deserialize\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":8,\"C\":-1,\"C++\":1,\"Python\":2,\"Java\":6,\"HTML\":0,\"CSS\":2,\"Ruby\":0,\"Go\":0,\"PHP\":5,\"Unknown\":1}}},{\"tags\":[\"rest\",\"jsonschema\",\"json-api\"],\"question_id\":36688091,\"creation_date\":1460965481,\"extraction_date\":\"2017-09-27T04:41:03.484Z\",\"title\":\"Exposing the JSON Schema for API endpoints?\",\"codeblocks\":\"[\\\"api/companies/\\\\n\\\\napi/companies/{id}/employees/\\\\n\\\",\\\"api/company-schema.json\\\",\\\"api/employee-schema.json\\\",\\\"api/schemas/company.json\\\",\\\"api/schemas/employee.json\\\"]\",\"languages\":{\"detected\":\"Unknown\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"wordpress\",\"json-api\"],\"question_id\":37622243,\"creation_date\":1464983015,\"extraction_date\":\"2017-09-27T04:41:03.485Z\",\"title\":\"WP JSON API get several posts using their slugs\",\"codeblocks\":\"[\\\"get_posts\\\",\\\"post_name_in(String [] slugs)\\\",\\\"http://example.org/?json=get_posts&slugs=[slug-one,slug-two,slug-n]\\\"]\",\"languages\":{\"detected\":\"Unknown\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"ruby-on-rails-4\",\"json-api\",\"jsonapi-resources\"],\"question_id\":37685251,\"creation_date\":1465319076,\"extraction_date\":\"2017-09-27T04:41:03.486Z\",\"title\":\"JSONAPI best way for responding a non-resource data like a access token with jsonapi-resources\",\"codeblocks\":\"[\\\"compound document\\\"]\",\"languages\":{\"detected\":\"Unknown\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"java\",\"json-api\",\"playframework-2.5\"],\"question_id\":37795498,\"creation_date\":1465837914,\"extraction_date\":\"2017-09-27T04:41:03.487Z\",\"title\":\"How use json-api format in playframework java?\",\"codeblocks\":\"[\\\"public class CompanyWrapper {\\\\n\\\\npublic Long id;\\\\npublic String name;\\\\npublic String cnpj;\\\\npublic Long idNode;\\\\n\\\"]\",\"languages\":{\"detected\":\"Java\",\"statistics\":{\"JavaScript\":0,\"C\":1,\"C++\":1,\"Python\":0,\"Java\":6,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"api\",\"rest\",\"relationship\",\"json-api\"],\"question_id\":37815602,\"creation_date\":1465916339,\"extraction_date\":\"2017-09-27T04:41:03.487Z\",\"title\":\"How to define a related resource URI in JSON:API\",\"codeblocks\":\"[\\\"// ...\\\\n{\\\\n  \\\\\\\"type\\\\\\\": \\\\\\\"articles\\\\\\\",\\\\n  \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n  \\\\\\\"attributes\\\\\\\": {\\\\n    \\\\\\\"title\\\\\\\": \\\\\\\"Rails is Omakase\\\\\\\"\\\\n  },\\\\n  \\\\\\\"relationships\\\\\\\": {\\\\n    \\\\\\\"author\\\\\\\": {\\\\n      \\\\\\\"links\\\\\\\": {\\\\n        \\\\\\\"self\\\\\\\": \\\\\\\"http://example.com/articles/1/relationships/author\\\\\\\",\\\\n        \\\\\\\"related\\\\\\\": \\\\\\\"http://example.com/articles/1/author\\\\\\\"\\\\n      },\\\\n      \\\\\\\"data\\\\\\\": { \\\\\\\"type\\\\\\\": \\\\\\\"people\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"9\\\\\\\" }\\\\n    }\\\\n  },\\\\n  \\\\\\\"links\\\\\\\": {\\\\n    \\\\\\\"self\\\\\\\": \\\\\\\"http://example.com/articles/1\\\\\\\"\\\\n  }\\\\n}\\\\n// ...\\\\n\\\",\\\"http://example.com/v1-2/people/9/\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ajax\",\"api\",\"ember.js\",\"ember-data\",\"json-api\"],\"question_id\":37822157,\"creation_date\":1465938675,\"extraction_date\":\"2017-09-27T04:41:03.488Z\",\"title\":\"Ember Push Ds.InvalidError to model instance\",\"codeblocks\":\"[\\\"actions: {\\\\n  recoverPasswordA: function(user) {\\\\n    var self = this;\\\\n    user.recoverPassword(user.serialize()).then(\\\\n      function(response) {\\\\n        self.store.pushPayload('user', response);\\\\n      },\\\\n      function(xhr) {\\\\n        var errors = xhr.errors;\\\\n        var recordErrors = user.get('errors');\\\\n        for (var key in errors) {\\\\n          if (!errors.hasOwnProperty(key)) {\\\\n            continue;\\\\n          }\\\\n          recordErrors.add(key, errors[key]);\\\\n        }\\\\n    }\\\\n  );\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":6,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":2,\"HTML\":0,\"CSS\":2,\"Ruby\":0,\"Go\":-1,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"php\",\"wordpress\",\"object\",\"json-api\"],\"question_id\":37870307,\"creation_date\":1466115637,\"extraction_date\":\"2017-09-27T04:41:03.490Z\",\"title\":\"how do i add an array of objects or an extra field to a wordpress json api core controller?\",\"codeblocks\":\"[\\\"public function get_category_index() {\\\\n    global $json_api;\\\\n    $args = null;\\\\n    if (!empty($json_api->query->parent)) {\\\\n      $args = array(\\\\n        'parent' => $json_api->query->parent\\\\n      );\\\\n    }\\\\n    $categories = $json_api->introspector->get_categories($args);\\\\n    return array(\\\\n  'count' => count($categories),\\\\n  'categories' => $categories\\\\n    );\\\\n  }\\\\n\\\",\\\"public function get_category_index() {\\\\n    global $json_api;\\\\n    $args = null;\\\\n    if (!empty($json_api->query->parent)) {\\\\n      $args = array(\\\\n        'parent' => $json_api->query->parent\\\\n      );\\\\n    }\\\\n    $categories = $json_api->introspector->get_categories($args);\\\\n    return array(\\\\n  'count' => count($categories),\\\\n  'categories' => $categories,\\\\n  'posts' => $posts,\\\\n    );\\\\n  }\\\\n\\\",\\\"class JSON_API_Category {\\\\n\\\\n  var $id;          // Integer\\\\n  var $slug;        // String\\\\n  var $title;       // String\\\\n  var $description; // String\\\\n  var $parent;      // Integer\\\\n  var $post_count;  // Integer\\\\n  var $posts;  // array\\\\n\\\\n  function JSON_API_Category($wp_category = null) {\\\\n    if ($wp_category) {\\\\n      $this->import_wp_object($wp_category);\\\\n    }\\\\n  }\\\\n\\\\n  function import_wp_object($wp_category) {\\\\n    $this->id = (int) $wp_category->term_id;\\\\n    $this->slug = $wp_category->slug;\\\\n    $this->title = $wp_category->name;\\\\n    $this->description = $wp_category->description;\\\\n    $this->parent = (int) $wp_category->parent;\\\\n    $this->post_count = (int) $wp_category->count;\\\\n    $this->posts = $wp_category->posts;\\\\n  }\\\\n\\\\n}\\\\n\\\",\\\"var $posts;  // array\\\\n\\\",\\\"$this->posts = $wp_category->posts;\\\\n\\\"]\",\"languages\":{\"detected\":\"Java\",\"statistics\":{\"JavaScript\":3,\"C\":0,\"C++\":1,\"Python\":0,\"Java\":7,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":-1,\"PHP\":6,\"Unknown\":1}}},{\"tags\":[\"elixir\",\"phoenix-framework\",\"json-api\"],\"question_id\":37956467,\"creation_date\":1466553583,\"extraction_date\":\"2017-09-27T04:41:03.491Z\",\"title\":\"Phoenix default response content-type of &quot;application/octet-stream; charset=utf-8&quot; for a json-api request\",\"codeblocks\":\"[\\\"pipeline :api do\\\\n    plug :accepts, [\\\\\\\"json-api\\\\\\\"]\\\\n    plug JaSerializer.ContentTypeNegotiation\\\\n  end\\\\n\\\",\\\"defmodule MyApp.Api.DataController do\\\\n  use MyApp.web, :controller\\\\n\\\\n  def show(conn, params) do\\\\n     query = # build a query\\\\n     render(conn, Repo.one query)\\\\n  end\\\\nend\\\\n\\\",\\\"content-type\\\",\\\"before_send\\\",\\\"content-type\\\",\\\"content-type\\\",\\\"content-type\\\"]\",\"languages\":{\"detected\":\"C\",\"statistics\":{\"JavaScript\":0,\"C\":1,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"java\",\"android\",\"json\",\"json-api\"],\"question_id\":38509063,\"creation_date\":1469116943,\"extraction_date\":\"2017-09-27T04:41:03.493Z\",\"title\":\"JSON parse for TFL Open Data\",\"codeblocks\":\"[\\\"journeys\\\",\\\"legs\\\",\\\"journeys\\\",\\\"detailed\\\",\\\"legs\\\",\\\"instruction\\\",\\\"string\\\",\\\"string\\\",\\\"TextView\\\",\\\"JSON\\\",\\\"try {\\\\n       //object is the JSON file.\\\\n       JSONArray Journey = object.getJSONArray(\\\\\\\"journeys\\\\\\\");\\\\n       if (Journey != null) {\\\\n        //Retrieving number of possible routes.\\\\n        for (int i=0;i<Journey.length();i++){\\\\n             Routes.add(Journey.getJSONObject(i));\\\\n        }\\\\n        //Retrieving number of possible legs for each route.\\\\n        if (!Routes.isEmpty()){\\\\n        for (int j = 0; j< Routes.size(); j++){\\\\n             Legs.add(j, Routes.get(j).getJSONArray(\\\\\\\"legs\\\\\\\"));\\\\n        }\\\\n        //Trying to retrieve the detailed instruction here and failing.\\\\n        for(int k=0;k<Routes.get(k).getJSONArray(\\\\\\\"legs\\\\\\\").length();k++){\\\\n            instructionDetail.add(k,Legs.get(k).getJSONObject(k).getJSONObject(\\\\\\\"instruction\\\\\\\"));\\\\n\\\\n        }\\\\n     }\\\\n }\\\\n\\\\n} catch (JSONException e) {\\\\n                    e.printStackTrace();\\\\n              }\\\\n\\\"]\",\"languages\":{\"detected\":\"C\",\"statistics\":{\"JavaScript\":2,\"C\":4,\"C++\":3,\"Python\":0,\"Java\":4,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"php\",\"json\",\"wordpress\",\"json-api\",\"wordpress-json-api\"],\"question_id\":38588608,\"creation_date\":1469532341,\"extraction_date\":\"2017-09-27T04:41:03.494Z\",\"title\":\"JSON_API don&#39;t return data on wordpress\",\"codeblocks\":\"[\\\"wordpress\\\",\\\"wordpress 4.5.3\\\",\\\"json-api 1.1.1\\\",\\\"wordpress\\\",\\\"ubuntu 16.04\\\",\\\"apache2\\\",\\\"php7\\\",\\\"json-api\\\",\\\"wordpress\\\",\\\"get_recent_posts\\\",\\\"The requested URL /api/get_recent_posts/ was not found on this server.\\\\nApache/2.4.18 (Ubuntu) Server at 172.16.1.38 Port 80\\\\n\\\",\\\"<VirtualHost *:80>\\\\n  #ServerName www.example.com\\\\n  ServerAdmin webmaster@localhost\\\\n  DocumentRoot /var/www/wordpress\\\\n\\\\n  <Directory />\\\\n    Options FollowSymLinks\\\\n    AllowOverride None\\\\n  </Directory>\\\\n  <Directory /var/www/wordpress>\\\\n    Options Indexes FollowSymLinks MultiViews\\\\n    AllowOverride None\\\\n    Order allow,deny\\\\n    allow from all\\\\n  </Directory>\\\\n  ErrorLog ${APACHE_LOG_DIR}/error.log\\\\n  CustomLog ${APACHE_LOG_DIR}/access.log combined\\\\n  #Include conf-available/serve-cgi-bin.conf\\\\n</VirtualHost>\\\\n\\\"]\",\"languages\":{\"detected\":\"Ruby\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":2,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"c#\",\"asp.net\",\".net\",\"json\",\"json-api\"],\"question_id\":38838654,\"creation_date\":1470690943,\"extraction_date\":\"2017-09-27T04:41:03.495Z\",\"title\":\"Modify .NET ApiController &quot;BadResult()&quot; to print custom JSON\",\"codeblocks\":\"[\\\"public async Task<IHttpActionResult> GetTimeSeries(string deviceId, string tag) { ... }\\\\n\\\",\\\"return BadRequest(someJSONErrorObject); \\\\n\\\",\\\"return NotFound(someJSONErrorObject); \\\\n\\\",\\\"return BadRequest(JsonConvert.SerializeObject(someJSONErrorObject));\\\\n\\\",\\\"{\\\\n\\\\\\\"Message\\\\\\\": \\\\\\\"{\\\\\\\\\\\\\\\"data\\\\\\\\\\\\\\\":null,\\\\\\\\\\\\\\\"errors\\\\\\\\\\\\\\\":[{\\\\\\\\\\\\\\\"detail\\\\\\\\\\\\\\\":\\\\\\\\\\\\\\\"The string was not recognized as a valid DateTime. There is an unknown word starting at index 0.\\\\\\\\\\\\\\\"}],\\\\\\\\\\\\\\\"meta\\\\\\\\\\\\\\\":null}\\\\\\\"\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":3,\"C\":0,\"C++\":1,\"Python\":0,\"Java\":3,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"python\",\"django\",\"django-rest-framework\",\"json-api\"],\"question_id\":38900889,\"creation_date\":1470930304,\"extraction_date\":\"2017-09-27T04:41:03.496Z\",\"title\":\"How to include related resource with Django Rest Framework JSON API?\",\"codeblocks\":\"[\\\"This endpoint does not support the include parameter for path...\\\\n\\\",\\\"# models:\\\\n\\\\nclass Household(models.Model):\\\\n  ...\\\\n\\\\nclass HouseholdMember(models.Model):\\\\n  household = models.ForeignKey(Household)\\\\n  ...\\\\n\\\\nclass Subscription(models.Model):\\\\n  subscriber = models.ForeignKey(HouseholdMember)\\\\n  ...\\\\n\\\\n# serializers\\\\n\\\\nfrom rest_framework_json_api import serializers\\\\n\\\\nclass SubscriptionSerializer(serializers.ModelSerializer):\\\\n  class Meta:\\\\n    model = Subscription\\\\n\\\",\\\"http://example.com/api/subscriptions?include=subscriber.household\\\",\\\"ResourceRelatedField\\\"]\",\"languages\":{\"detected\":\"Python\",\"statistics\":{\"JavaScript\":0,\"C\":3,\"C++\":3,\"Python\":4,\"Java\":2,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"json\",\"ember.js\",\"ember-data\",\"json-api\"],\"question_id\":38908927,\"creation_date\":1470968852,\"extraction_date\":\"2017-09-27T04:41:03.497Z\",\"title\":\"JSON API scaling\",\"codeblocks\":\"[\\\"include\\\",\\\"JOIN\\\",\\\"...\\\\n{\\\\n  \\\\\\\"some_relationship_name\\\\\\\": {\\\\n    data: [\\\\n      { id: 1, type: \\\\\\\"derp\\\\\\\" }\\\\n      ...\\\\n    ]\\\\n  }\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"json-api\"],\"question_id\":39860003,\"creation_date\":1475608264,\"extraction_date\":\"2017-09-27T04:41:03.497Z\",\"title\":\"Handling Ember model error w/ JSONAPI\",\"codeblocks\":\"[\\\"import Ember from 'ember';\\\\n\\\\nexport default Ember.Route.extend({\\\\n    model() {\\\\n        return this.get('store').findAll('page').catch(function(){});\\\\n    }\\\\n});\\\\n\\\",\\\"{{#each model.errors as |error|}}\\\\n    <div class=\\\\\\\"error msg_animate\\\\\\\">{{{error.message}}}</div>\\\\n{{/each}}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":1,\"C\":0,\"C++\":-1,\"Python\":0,\"Java\":1,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"rest\",\"hyperlink\",\"url-encoding\",\"json-api\"],\"question_id\":39862893,\"creation_date\":1475621072,\"extraction_date\":\"2017-09-27T04:41:03.498Z\",\"title\":\"Should links in json-api responses be encoded?\",\"codeblocks\":\"[\\\"{\\\\n  \\\\\\\"links\\\\\\\": {\\\\n    \\\\\\\"self\\\\\\\": \\\\\\\"http://example.com/articles\\\\\\\",\\\\n    \\\\\\\"next\\\\\\\": \\\\\\\"http://example.com/articles?page[offset]=2\\\\\\\",\\\\n    \\\\\\\"last\\\\\\\": \\\\\\\"http://example.com/articles?page[offset]=10\\\\\\\"\\\\n  },\\\\n  \\\\\\\"data\\\\\\\": [{\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"articles\\\\\\\",\\\\n    \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\": {\\\\n      \\\\\\\"title\\\\\\\": \\\\\\\"JSON API paints my bikeshed!\\\\\\\"\\\\n    }\\\\n  ]\\\\n}\\\\n\\\",\\\"GET /articles?include=author&fields[articles]=title,body&fields[people]=name HTTP/1.1\\\\nAccept: application/vnd.api+json\\\\n\\\",\\\"{\\\\n  \\\\\\\"links\\\\\\\": {\\\\n    \\\\\\\"self\\\\\\\": \\\\\\\"http://example.com/articles\\\\\\\",\\\\n    \\\\\\\"next\\\\\\\": \\\\\\\"http://example.com/articles?page%5Boffset%5D=2\\\\\\\",\\\\n    \\\\\\\"last\\\\\\\": \\\\\\\"http://example.com/articles?page%5Boffset%5D=10\\\\\\\"\\\\n  },\\\\n  \\\\\\\"data\\\\\\\": [{\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"articles\\\\\\\",\\\\n    \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\": {\\\\n      \\\\\\\"title\\\\\\\": \\\\\\\"JSON API paints my bikeshed!\\\\\\\"\\\\n    }\\\\n  ]\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"json-api\",\"jsonapi-resources\"],\"question_id\":39866810,\"creation_date\":1475648780,\"extraction_date\":\"2017-09-27T04:41:03.500Z\",\"title\":\"jsonapi-resources; wrong self link\",\"codeblocks\":\"[\\\"require 'api_constraints'\\\\n\\\\nRails.application.routes.draw do\\\\n  namespace :api, defaults: { format: :json }, constraints: { subdomain: 'api' }, path: '/'  do\\\\n    scope module: :v1, constraints: ApiConstraints.new(version: 1, default: true) do\\\\n      # resources :subscriptions, only: [:index, :new, :create]\\\\n      # jsonapi_resources :subscriptions, only: [:index, :new, :create]\\\\n      jsonapi_resources :subscriptions\\\\n    end\\\\n  end\\\\n\\\",\\\"class Api::V1::SubscriptionResource < JSONAPI::Resource\\\\n   attributes :id, :third-service_id, :created_at, :updated_at\\\\n   model_name 'Subscription'\\\\n\\\\n   # def custom_links(options)\\\\n   #  {self: nil}\\\\n   # end\\\\nend\\\\n\\\",\\\"http://api.localhost.local:3000/api/v1/subscriptions/1\\\",\\\"http://api.localhost.local:3000/subscriptions/1\\\",\\\"rake routes\\\",\\\"[DUPLICATE ATTRIBUTE] `id` has already been defined in SubscriptionResource.\\\\n              Prefix Verb   URI Pattern                  Controller#Action\\\\napi_v1_subscriptions GET    /subscriptions(.:format)     api/v1/subscriptions#index {:format=>:json, :subdomain=>\\\\\\\"api\\\\\\\"}\\\\n                     POST   /subscriptions(.:format)     api/v1/subscriptions#create {:format=>:json, :subdomain=>\\\\\\\"api\\\\\\\"}\\\\n api_v1_subscription GET    /subscriptions/:id(.:format) api/v1/subscriptions#show {:format=>:json, :subdomain=>\\\\\\\"api\\\\\\\"}\\\\n                     PATCH  /subscriptions/:id(.:format) api/v1/subscriptions#update {:format=>:json, :subdomain=>\\\\\\\"api\\\\\\\"}\\\\n                     PUT    /subscriptions/:id(.:format) api/v1/subscriptions#update {:format=>:json, :subdomain=>\\\\\\\"api\\\\\\\"}\\\\n                     DELETE /subscriptions/:id(.:format) api/v1/subscriptions#destroy {:format=>:json, :subdomain=>\\\\\\\"api\\\\\\\"}\\\\n        stripe_event        /stripe-events               StripeEvent::Engine\\\\n\\\",\\\"  namespace :api do\\\\n    namespace :v1 do\\\\n      jsonapi_resources :subscriptions\\\\n    end\\\\n  end\\\\n\\\"]\",\"languages\":{\"detected\":\"Ruby\",\"statistics\":{\"JavaScript\":2,\"C\":-1,\"C++\":1,\"Python\":2,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":4,\"Go\":0,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"json-api\"],\"question_id\":39877119,\"creation_date\":1475678680,\"extraction_date\":\"2017-09-27T04:41:03.501Z\",\"title\":\"JSON API implmentation for service object in Rails\",\"codeblocks\":\"[\\\"{\\\\\\\"plan_id\\\\\\\": 1,\\\\n \\\\\\\"user_info\\\\\\\":{\\\\\\\"uuid\\\\\\\": \\\\\\\"644e1dd7-2a7f-18fb-b8ed-ed78c3f92c2b\\\\\\\",\\\\n              \\\\\\\"name\\\\\\\": \\\\\\\"John Doe\\\\\\\",\\\\n              \\\\\\\"email\\\\\\\": \\\\\\\"john@gmailcom\\\\\\\"},\\\\n \\\\\\\"user_card_info\\\\\\\": {\\\\\\\"object\\\\\\\":\\\\\\\"card\\\\\\\",\\\\n                    \\\\\\\"exp_month\\\\\\\": 12,\\\\n                    \\\\\\\"exp_year\\\\\\\": 2020,\\\\n                    \\\\\\\"number\\\\\\\": 4242424242424242}\\\\n }\\\\n\\\",\\\"abstract resource\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":2,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"rest\",\"crud\",\"restful-architecture\",\"json-api\"],\"question_id\":40331474,\"creation_date\":1477846991,\"extraction_date\":\"2017-09-27T04:41:03.501Z\",\"title\":\"JSON-API design\",\"codeblocks\":\"[\\\"House\\\",\\\"Car\\\",\\\"/api/house/:houseId/comments\\\",\\\"/api/car/:carId/comments\\\",\\\"/api/comments/:generalId\\\"]\",\"languages\":{\"detected\":\"Unknown\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"rspec\",\"json-api\",\"fabrication-gem\"],\"question_id\":40364637,\"creation_date\":1478018825,\"extraction_date\":\"2017-09-27T04:41:03.502Z\",\"title\":\"Build Nested Request Structure in Rspec controller test\",\"codeblocks\":\"[\\\"json-api\\\",\\\"rspec\\\"]\",\"languages\":{\"detected\":\"Unknown\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"java\",\"android\",\"retrofit\",\"json-api\",\"moshi\"],\"question_id\":40608078,\"creation_date\":1479207401,\"extraction_date\":\"2017-09-27T04:41:03.503Z\",\"title\":\"How can I use jsonapi in Retrofit2?\",\"codeblocks\":\"[\\\"@JsonApi(type = \\\\\\\"tokens\\\\\\\")\\\\npublic class TokenModel extends Resource {\\\\n    @Json(name = \\\\\\\"cell_phone\\\\\\\")\\\\n    public String cellPhone;\\\\n}\\\\n\\\",\\\"public interface TestService {\\\\n    @POST(\\\\\\\"token\\\\\\\")\\\\n    Call<TokenModel> newOtp(@Body TokenModel tokenModel);\\\\n}\\\\n\\\",\\\"public class TestProvider {\\\\n    private TestService testService;\\\\n\\\\n    public TestProvider() {\\\\n        OkHttpClient httpClient = new OkHttpClient();\\\\n        Retrofit refRetrofit = new Retrofit.Builder()\\\\n                .baseUrl(ClientConfigs.BASE_URL)\\\\n                .client(httpClient)\\\\n                .addConverterFactory(MoshiConverterFactory.create())\\\\n//                .addConverterFactory(????????????????????????????)\\\\n                .build();\\\\n        testService = refRetrofit.create(TestService.class);\\\\n    }\\\\n\\\\n    publicTestService getTestService() {\\\\n        return testService;\\\\n    }\\\\n}\\\\n\\\",\\\"MoshiConverterFactory\\\",\\\"Unable to create converter for class com.xxx.xxx.model.TokenModel\\\",\\\"TsetProvider testProvider = new TestProvider();\\\\nTestService testService = testProvider.getTestService();\\\\n\\\\nTokenModel tokenModel = new TokenModel();\\\\ntokenModel.cellPhone = \\\\\\\"121212129999\\\\\\\";\\\\n\\\\nCall<TokenModel> call = testService.newOtp(tokenModel);\\\\ncall.enqueue(new Callback<TokenModel>() {\\\\n    @Override\\\\n    public void onResponse(Call<TokenModel> call, Response<TokenModel> response) {\\\\n    }\\\\n\\\\n    @Override\\\\n    public void onFailure(Call<TokenModel> call, Throwable t) {\\\\n    }\\\\n});\\\\n\\\"]\",\"languages\":{\"detected\":\"Java\",\"statistics\":{\"JavaScript\":0,\"C\":1,\"C++\":4,\"Python\":0,\"Java\":13,\"HTML\":0,\"CSS\":0,\"Ruby\":2,\"Go\":1,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"java\",\"google-cloud-storage\",\"json-api\"],\"question_id\":40743320,\"creation_date\":1479821898,\"extraction_date\":\"2017-09-27T04:41:03.505Z\",\"title\":\"Google Cloud Storage JSON API Service account 403 Forbidden\",\"codeblocks\":\"[\\\"403 Forbidden\\\\n{\\\\n  \\\\\\\"code\\\\\\\" : 403,\\\\n  \\\\\\\"errors\\\\\\\" : [ {\\\\n    \\\\\\\"domain\\\\\\\" : \\\\\\\"global\\\\\\\",\\\\n    \\\\\\\"message\\\\\\\" : \\\\\\\"Forbidden\\\\\\\",\\\\n    \\\\\\\"reason\\\\\\\" : \\\\\\\"forbidden\\\\\\\"\\\\n  } ],\\\\n  \\\\\\\"message\\\\\\\" : \\\\\\\"Forbidden\\\\\\\"\\\\n}\\\",\\\"HttpTransport transport = GoogleNetHttpTransport.newTrustedTransport();\\\\nJsonFactory jsonFactory = new JacksonFactory();\\\\n\\\\nGoogleCredential credential = null;\\\\nInputStream credentialsStream = null;\\\\ntry {\\\\n  credentialsStream = new FileInputStream(\\\\\\\"<Location of Service Account JSON File>\\\\\\\");\\\\n  credential =GoogleCredential.fromStream(credentialsStream, transport, jsonFactory);\\\\n} catch (IOException e) {\\\\n\\\\n} finally {\\\\n  if (credentialsStream != null) {\\\\n    credentialsStream.close();\\\\n  }\\\\n}           \\\\n\\\\n\\\\n if (credential.createScopedRequired()) {\\\\n      Collection<String> scopes = StorageScopes.all();\\\\n      credential = credential.createScoped(scopes);\\\\n    }\\\\nreturn new Storage.Builder(transport, jsonFactory, credential)\\\\n    .setApplicationName(\\\\\\\"DemoApplication\\\\\\\")\\\\n    .build();\\\\n\\\",\\\"Storage client = StorageFactory.getService();\\\\n\\\\nStorage.Objects.List listRequest = client.objects().list(bucketName);\\\\n\\\\nList<StorageObject> results = new ArrayList<StorageObject>();\\\\nObjects objects;\\\\n\\\\n// Iterate through each page of results, and add them to our results list.\\\\ndo {\\\\n  objects = listRequest.execute();\\\\n  // Add the items in this page of results to the list we'll return.\\\\n  results.addAll(objects.getItems());\\\\n\\\\n  // Get the next page, in the next iteration of this loop.\\\\n  listRequest.setPageToken(objects.getNextPageToken());\\\\n} while (null != objects.getNextPageToken());\\\\n\\\"]\",\"languages\":{\"detected\":\"Java\",\"statistics\":{\"JavaScript\":5,\"C\":2,\"C++\":3,\"Python\":0,\"Java\":9,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":1,\"PHP\":2,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"json-api\"],\"question_id\":40790997,\"creation_date\":1480004465,\"extraction_date\":\"2017-09-27T04:41:03.507Z\",\"title\":\"Rails JSON_API create Book with list of Genres\",\"codeblocks\":\"[\\\"book\\\",\\\"genres\\\",\\\"class Book < ApplicationRecord\\\\n  belongs_to :author, class_name: \\\\\\\"User\\\\\\\"\\\\n  has_and_belongs_to_many :genres\\\\nend\\\\n\\\",\\\"class Genre < ApplicationRecord\\\\n  has_and_belongs_to_many :books\\\\nend\\\\n\\\",\\\"class BookSerializer < ActiveModel::Serializer\\\\n  attributes :id, :title, :adult_content, :published\\\\n\\\\n  belongs_to :author\\\\n  has_many :genres\\\\nend\\\\n\\\",\\\"def setup\\\\n    ...\\\\n    @fantasy = genres(:fantasy)\\\\n\\\\n    @newbook = {\\\\n      title: \\\\\\\"Three Little Pigs\\\\\\\",\\\\n      adult_content: false,\\\\n      author_id: @jim.id,\\\\n      published: false,\\\\n      genres: [{title: 'Fantasy'}]\\\\n    }\\\\nend\\\\n\\\",\\\"test \\\\\\\"book create - should create a new book\\\\\\\" do\\\\n    post books_path, params: @newbook, headers: user_authenticated_header(@jim)\\\\n    assert_response :created\\\\n    json = JSON.parse(response.body)\\\\n    puts \\\\\\\"json = #{json}\\\\\\\"\\\\n    assert_equal \\\\\\\"Three Little Pigs\\\\\\\", json['data']['attributes']['title']\\\\n    genre_data = json['data']['relationships']['genres']['data']\\\\n\\\\n    puts \\\\\\\"genre_data = #{genre_data.count}\\\\\\\"\\\\n    assert_equal \\\\\\\"Fantasy\\\\\\\", genre_data\\\\nend\\\\n\\\",\\\"def book_params\\\\n    params.permit(:title, :adult_content, :published, :author_id, :genres)\\\\nend\\\\n\\\",\\\"# Running:\\\\n\\\\n......................................................json = {\\\\\\\"data\\\\\\\"=>{\\\\\\\"id\\\\\\\"=>\\\\\\\"1018350796\\\\\\\", \\\\\\\"type\\\\\\\"=>\\\\\\\"books\\\\\\\", \\\\\\\"attributes\\\\\\\"=>{\\\\\\\"title\\\\\\\"=>\\\\\\\"Three Little Pigs\\\\\\\", \\\\\\\"adult-content\\\\\\\"=>false, \\\\\\\"published\\\\\\\"=>false}, \\\\\\\"relationships\\\\\\\"=>{\\\\\\\"author\\\\\\\"=>{\\\\\\\"data\\\\\\\"=>{\\\\\\\"id\\\\\\\"=>\\\\\\\"1027431151\\\\\\\", \\\\\\\"type\\\\\\\"=>\\\\\\\"users\\\\\\\"}}, \\\\\\\"genres\\\\\\\"=>{\\\\\\\"data\\\\\\\"=>[]}}}}\\\\ngenre_data = 0\\\\nF\\\\n\\\\nFailure:\\\\nBooksControllerTest#test_book_create_-_should_create_a_new_book [/Users/warlock/App_Projects/Raven Quill/Source Code/Rails/raven-quill-api/test/controllers/books_controller_test.rb:60]:\\\\nExpected: \\\\\\\"Fantasy\\\\\\\"\\\\n  Actual: []\\\\n\\\\n\\\\nbin/rails test test/controllers/books_controller_test.rb:51\\\\n\\\\n\\\\n\\\\nFinished in 1.071044s, 51.3518 runs/s, 65.3568 assertions/s.\\\\n\\\\n55 runs, 70 assertions, 1 failures, 0 errors, 0 skips\\\\n\\\",\\\"assert_equal \\\\\\\"Fantasy\\\\\\\", genre_data\\\\n\\\",\\\"genre => {data: []}\\\"]\",\"languages\":{\"detected\":\"Ruby\",\"statistics\":{\"JavaScript\":2,\"C\":-1,\"C++\":2,\"Python\":2,\"Java\":1,\"HTML\":0,\"CSS\":0,\"Ruby\":5,\"Go\":-1,\"PHP\":2,\"Unknown\":1}}},{\"tags\":[\"json\",\"ember.js\",\"ember-data\",\"json-api\"],\"question_id\":40939531,\"creation_date\":1480706575,\"extraction_date\":\"2017-09-27T04:41:03.509Z\",\"title\":\"normalizeResponse not recognizing link between nested relationships\",\"codeblocks\":\"[\\\"normalizeResponse()\\\",\\\"DS.JSONAPISerializer\\\",\\\"hasMany\\\",\\\"// models/search.js\\\\n// i am able to browse from the search model to children with success\\\\nexport default DS.Model.extend({\\\\n  articles: DS.hasMany('article'),\\\\n});\\\\n\\\\n// models/article.js\\\\n// i CANNOT browse from an article down to its digest in ember inspector\\\\nexport default DS.Model.extend({\\\\n  search: DS.belongsTo('search'),\\\\n  type: DS.attr(),\\\\n  created: DS.attr(),\\\\n  updated: DS.attr(),\\\\n  digest: DS.belongsTo('digest'),\\\\n});\\\\n\\\\n// models/digest.js\\\\nexport default DS.Model.extend({\\\\n  title: DS.attr(),\\\\n  desc: DS.attr(),\\\\n  date: DS.attr(),\\\\n  article: DS.belongsTo('article'),\\\\n});\\\\n\\\",\\\"normalizeResponse\\\",\\\"normalizeResponse\\\",\\\"{\\\\\\\"data\\\\\\\":{\\\\n  \\\\\\\"type\\\\\\\":\\\\\\\"searches\\\\\\\",\\\\n  \\\\\\\"id\\\\\\\":\\\\\\\"17482738723\\\\\\\",\\\\n  \\\\\\\"attributes\\\\\\\":{\\\\n\\\\n  },\\\\n  \\\\\\\"relationships\\\\\\\":{\\\\n    \\\\\\\"articles\\\\\\\":{\\\\n      \\\\\\\"data\\\\\\\":[\\\\n        {\\\\n          \\\\\\\"type\\\\\\\":\\\\\\\"articles\\\\\\\",\\\\n          \\\\\\\"id\\\\\\\":\\\\\\\"19988\\\\\\\"\\\\n        },\\\\n        {\\\\n          \\\\\\\"type\\\\\\\":\\\\\\\"articles\\\\\\\",\\\\n          \\\\\\\"id\\\\\\\":\\\\\\\"19989\\\\\\\"\\\\n        },\\\\n      ]\\\\n    },\\\\n    \\\\\\\"digest\\\\\\\":{\\\\n      \\\\\\\"data\\\\\\\":[\\\\n        {\\\\n          \\\\\\\"type\\\\\\\":\\\\\\\"digest\\\\\\\",\\\\n          \\\\\\\"id\\\\\\\":\\\\\\\"19988_digest\\\\\\\"\\\\n        },\\\\n        {\\\\n          \\\\\\\"type\\\\\\\":\\\\\\\"digest\\\\\\\",\\\\n          \\\\\\\"id\\\\\\\":\\\\\\\"19989_digest\\\\\\\"\\\\n        },\\\\n      ]\\\\n    }\\\\n  }\\\\n},\\\\n\\\\\\\"included\\\\\\\":[\\\\n  {\\\\n    \\\\\\\"id\\\\\\\":\\\\\\\"19988\\\\\\\",\\\\n    \\\\\\\"type\\\\\\\":\\\\\\\"articles\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\":{\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"internal\\\\\\\",\\\\n      \\\\\\\"created\\\\\\\":\\\\\\\"2016-09-27T00:13:11.000Z\\\\\\\",\\\\n      \\\\\\\"updated\\\\\\\":\\\\\\\"2016-09-27T00:13:11.000Z\\\\\\\",\\\\n    }\\\\n  },\\\\n  {\\\\n    \\\\\\\"id\\\\\\\":\\\\\\\"19988_digest\\\\\\\",\\\\n    \\\\\\\"type\\\\\\\":\\\\\\\"digest\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\":{\\\\n      \\\\\\\"title\\\\\\\":null,\\\\n      \\\\\\\"desc\\\\\\\":\\\\\\\"four five six\\\\\\\",\\\\n    }\\\\n  },\\\\n  {\\\\n    \\\\\\\"id\\\\\\\":\\\\\\\"19989\\\\\\\",\\\\n    \\\\\\\"type\\\\\\\":\\\\\\\"articles\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\":{\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"internal\\\\\\\",\\\\n      \\\\\\\"created\\\\\\\":\\\\\\\"2016-09-27T00:13:11.000Z\\\\\\\",\\\\n      \\\\\\\"updated\\\\\\\":\\\\\\\"2016-09-27T00:13:11.000Z\\\\\\\",\\\\n    }\\\\n  },\\\\n  {\\\\n    \\\\\\\"id\\\\\\\":\\\\\\\"19989_digest\\\\\\\",\\\\n    \\\\\\\"type\\\\\\\":\\\\\\\"digest\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\":{\\\\n      \\\\\\\"title\\\\\\\":\\\\\\\"one two three\\\\\\\",\\\\n      \\\\\\\"desc\\\\\\\":null,\\\\n    }\\\\n  },\\\\n]\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":3,\"C\":-1,\"C++\":-1,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":2,\"Ruby\":0,\"Go\":-1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"coffeescript\",\"semantic-ui\",\"json-api\"],\"question_id\":41089422,\"creation_date\":1481480077,\"extraction_date\":\"2017-09-27T04:41:03.509Z\",\"title\":\"Semantic-ui / Search - Custom HTTP_ACCEPT\",\"codeblocks\":\"[\\\"  $('.ui.search')\\\\n    .search({\\\\n      type: 'recipe',\\\\n      apiSettings: {\\\\n        onRequest: (promise, xhr) ->\\\\n          xhr.setRequestHeader('HTTP_ACCEPT', 'application/vnd.api+json')\\\\n        url: '//staging-doeat.herokuapp.com/api/v1/recipes',\\\\n        onResponse: (response) ->\\\\n          console.log(response)\\\\n      },\\\\n  });\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":4,\"C\":-1,\"C++\":-1,\"Python\":0,\"Java\":-1,\"HTML\":0,\"CSS\":2,\"Ruby\":0,\"Go\":-1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"android\",\"json\",\"rest\",\"json-api\",\"wordpress-json-api\"],\"question_id\":41293341,\"creation_date\":1482450790,\"extraction_date\":\"2017-09-27T04:41:03.511Z\",\"title\":\"Unable to parse JSON REST API response\",\"codeblocks\":\"[\\\"[{\\\\\\\"umeta_id\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"user_id\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"meta_key\\\\\\\":\\\\\\\"nickname\\\\\\\",\\\\\\\"meta_value\\\\\\\":\\\\\\\"zfdz\\\\\\\"},{\\\\\\\"umeta_id\\\\\\\":\\\\\\\"2\\\\\\\",\\\\\\\"user_id\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"meta_key\\\\\\\":\\\\\\\"first_name\\\\\\\",\\\\\\\"meta_value\\\\\\\":\\\\\\\"\\\\\\\"},{\\\\\\\"umeta_id\\\\\\\":\\\\\\\"3\\\\\\\",\\\\\\\"user_id\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"meta_key\\\\\\\":\\\\\\\"last_name\\\\\\\",\\\\\\\"meta_value\\\\\\\":\\\\\\\"\\\\\\\"},{\\\\\\\"umeta_id\\\\\\\":\\\\\\\"4\\\\\\\",\\\\\\\"user_id\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"meta_key\\\\\\\":\\\\\\\"description\\\\\\\",\\\\\\\"meta_value\\\\\\\":\\\\\\\"\\\\\\\"},{\\\\\\\"umeta_id\\\\\\\":\\\\\\\"5\\\\\\\",\\\\\\\"user_id\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"meta_key\\\\\\\":\\\\\\\"rich_editing\\\\\\\",\\\\\\\"meta_value\\\\\\\":\\\\\\\"true\\\\\\\"},{\\\\\\\"umeta_id\\\\\\\":\\\\\\\"6\\\\\\\",\\\\\\\"user_id\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"meta_key\\\\\\\":\\\\\\\"comment_shortcuts\\\\\\\",\\\\\\\"meta_value\\\\\\\":\\\\\\\"false\\\\\\\"},{\\\\\\\"umeta_id\\\\\\\":\\\\\\\"7\\\\\\\",\\\\\\\"user_id\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"meta_key\\\\\\\":\\\\\\\"admin_color\\\\\\\",\\\\\\\"meta_value\\\\\\\":\\\\\\\"fresh\\\\\\\"},{\\\\\\\"umeta_id\\\\\\\":\\\\\\\"8\\\\\\\",\\\\\\\"user_id\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"meta_key\\\\\\\":\\\\\\\"use_ssl\\\\\\\",\\\\\\\"meta_value\\\\\\\":\\\\\\\"0\\\\\\\"},{\\\\\\\"umeta_id\\\\\\\":\\\\\\\"9\\\\\\\",\\\\\\\"user_id\\\\\\\":\\\\\\\"1\\\\\\\",\\\\\\\"meta_key\\\\\\\":\\\\\\\"show_admin_bar_front\\\\\\\",\\\\\\\"meta_value\\\\\\\":\\\\\\\"true\\\\\\\"}]\\\\n\\\",\\\"if (jsonStr != null) {\\\\n    try {\\\\n        JSONObject jsonObj = new JSONObject(jsonStr);\\\\n\\\\n        // Getting JSON Array node\\\\n        JSONArray contacts = jsonObj.getJSONArray(\\\\\\\"\\\\\\\");\\\\n\\\\n        // looping through All Contacts\\\\n        for (int i = 0; i < contacts.length(); i++) {\\\\n            JSONObject c = contacts.getJSONObject(i);\\\\n\\\\n            String name = c.getString(\\\\\\\"umeta_id\\\\\\\");\\\\n            String email = c.getString(\\\\\\\"user_id\\\\\\\");\\\\n            String mobile = c.getString(\\\\\\\"meta_value\\\\\\\");\\\\n\\\\n\\\\n            HashMap<String, String> contact = new HashMap<>();\\\\n\\\\n            contact.put(\\\\\\\"name\\\\\\\", name);\\\\n            contact.put(\\\\\\\"email\\\\\\\", email);\\\\n            contact.put(\\\\\\\"mobile\\\\\\\", mobile);\\\\n\\\\n            // adding contact to contact list\\\\n            contactList.add(contact);\\\\n        }\\\\n    } catch (final JSONException e) {\\\\n        Log.e(TAG, \\\\\\\"Json parsing error: \\\\\\\" + e.getMessage());\\\\n        runOnUiThread(new Runnable() {\\\\n            @Override\\\\n            public void run() {\\\\n                Toast.makeText(getApplicationContext(),\\\\n                        \\\\\\\"Json parsing error: \\\\\\\" + e.getMessage(),\\\\n                        Toast.LENGTH_LONG)\\\\n                        .show();\\\\n            }\\\\n        });\\\\n\\\\n    }\\\\n} else {\\\\n    Log.e(TAG, \\\\\\\"Couldn't get json from server.\\\\\\\");\\\\n    runOnUiThread(new Runnable() {\\\\n        @Override\\\\n        public void run() {\\\\n            Toast.makeText(getApplicationContext(),\\\\n                    \\\\\\\"Couldn't get json from server. Check LogCat for possible errors!\\\\\\\",\\\\n                    Toast.LENGTH_LONG)\\\\n                    .show();\\\\n        }\\\\n    });\\\\n\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"Java\",\"statistics\":{\"JavaScript\":2,\"C\":3,\"C++\":4,\"Python\":2,\"Java\":12,\"HTML\":0,\"CSS\":2,\"Ruby\":2,\"Go\":0,\"PHP\":2,\"Unknown\":1}}},{\"tags\":[\"python\",\"validation\",\"sqlalchemy\",\"json-api\",\"marshmallow\"],\"question_id\":41514960,\"creation_date\":1483739627,\"extraction_date\":\"2017-09-27T04:41:03.514Z\",\"title\":\"Use DB data model to generate SQLAlchemy models, schemas, and JSON response\",\"codeblocks\":\"[\\\"import flask\\\\nfrom marshmallow_jsonapi import Schema, fields\\\\nfrom sqlalchemy.ext.declarative import DeferredReflection\\\\nfrom flask_marshmallow import Marshmallow\\\\nfrom flask_sqlalchemy import SQLAlchemy\\\\n\\\\napp = flask.Flask(__name__)\\\\nDB = SQLAlchemy()\\\\nDB.init_app(app)\\\\nMA = Marshmallow(app)\\\\nDeferredReflection.prepare(DB.get_engine(app))\\\\n\\\\nclass Dummy(DeferredReflection, DB.Model):\\\\n    __tablename__ = \\\\\\\"dummy\\\\\\\"  # This model will be reflected from the Dummy table\\\\n\\\\n\\\\nclass DummySchema(MA.ModelSchema, Schema):  # The problem line\\\\n    class Meta:\\\\n        model = Dummy  # Create schema for the Dummy model\\\\n\\\",\\\"api_1        | [2017-01-05 23:16:13,379] ERROR in app: Exception on /api/dummy [POST]\\\\napi_1        | Traceback (most recent call last):\\\\napi_1        |   File \\\\\\\"/usr/local/lib/python3.5/site-packages/flask/app.py\\\\\\\", line 1612, in full_dispatch_request\\\\napi_1        |     rv = self.dispatch_request()\\\\napi_1        |   File \\\\\\\"/usr/local/lib/python3.5/site-packages/flask/app.py\\\\\\\", line 1598, in dispatch_request\\\\napi_1        |     return self.view_functions[rule.endpoint](**req.view_args)\\\\napi_1        |   File \\\\\\\"/usr/local/lib/python3.5/site-packages/flask_restful/__init__.py\\\\\\\", line 477, in wrapper\\\\napi_1        |     resp = resource(*args, **kwargs)\\\\napi_1        |   File \\\\\\\"/usr/local/lib/python3.5/site-packages/flask/views.py\\\\\\\", line 84, in view\\\\napi_1        |     return self.dispatch_request(*args, **kwargs)\\\\napi_1        |   File \\\\\\\"/usr/local/lib/python3.5/site-packages/flask_restful/__init__.py\\\\\\\", line 587, in dispatch_request\\\\napi_1        |     resp = meth(*args, **kwargs)\\\\napi_1        |   File \\\\\\\"/dummyproj/api/src/dummyproj/api/v1/dummy_resource.py\\\\\\\", line 34, in post\\\\napi_1        |     dummy_schema = dummy.DummySchema()\\\\napi_1        |   File \\\\\\\"/usr/local/lib/python3.5/site-packages/marshmallow_sqlalchemy/schema.py\\\\\\\", line 143, in __init__\\\\napi_1        |     super(ModelSchema, self).__init__(*args, **kwargs)\\\\napi_1        |   File \\\\\\\"/usr/local/lib/python3.5/site-packages/marshmallow_jsonapi/schema.py\\\\\\\", line 81, in __init__\\\\napi_1        |     super(Schema, self).__init__(*args, **kwargs)\\\\napi_1        |   File \\\\\\\"/usr/local/lib/python3.5/site-packages/marshmallow/schema.py\\\\\\\", line 358, in __init__\\\\napi_1        |     self._update_fields(many=many)\\\\napi_1        |   File \\\\\\\"/usr/local/lib/python3.5/site-packages/marshmallow/schema.py\\\\\\\", line 750, in _update_fields\\\\napi_1        |     self.__set_field_attrs(ret)\\\\napi_1        |   File \\\\\\\"/usr/local/lib/python3.5/site-packages/marshmallow/schema.py\\\\\\\", line 772, in __set_field_attrs\\\\napi_1        |     self.on_bind_field(field_name, field_obj)\\\\napi_1        |   File \\\\\\\"/usr/local/lib/python3.5/site-packages/marshmallow_jsonapi/schema.py\\\\\\\", line 164, in on_bind_field\\\\napi_1        |     field_obj.load_from = self.inflect(field_name)\\\\napi_1        |   File \\\\\\\"/usr/local/lib/python3.5/site-packages/marshmallow_jsonapi/schema.py\\\\\\\", line 190, in inflect\\\\napi_1        |     return self.opts.inflect(text) if self.opts.inflect else text\\\\napi_1        | AttributeError: 'SchemaOpts' object has no attribute 'inflect'\\\\n\\\"]\",\"languages\":{\"detected\":\"Python\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":6,\"Java\":1,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"json\",\"ember.js\",\"ember-data\",\"json-api\"],\"question_id\":41522389,\"creation_date\":1483798708,\"extraction_date\":\"2017-09-27T04:41:03.515Z\",\"title\":\"EmberJS doesn&#39;t populate camelCased attributes\",\"codeblocks\":\"[\\\"import DS from 'ember-data';\\\\nexport default DS.Model.extend({\\\\n    shortName: DS.attr('string'),\\\\n    fullName: DS.attr('string'),\\\\n    inn: DS.attr('string'),\\\\n    kpp: DS.attr('string'),\\\\n    checkingAccount: DS.attr('string'),\\\\n    correspodentAccount: DS.attr('string'),\\\\n    bik: DS.attr('string'),\\\\n});\\\\n\\\",\\\"{{#each model as |company|}}\\\\n        <tr class=\\\\\\\"companies-list__item\\\\\\\">\\\\n            <td class=\\\\\\\"companies-list__property\\\\\\\">{{company.shortName}}</td>\\\\n            <td class=\\\\\\\"companies-list__property\\\\\\\">{{company.inn}}</td>\\\\n            <td class=\\\\\\\"companies-list__property\\\\\\\">{{company.kpp}}</td>\\\\n            <td class=\\\\\\\"companies-list__property\\\\\\\">{{company.checkingAccount}}</td>\\\\n            <td class=\\\\\\\"companies-list__property\\\\\\\">{{company.correspodentAccount}}</td>\\\\n            <td class=\\\\\\\"companies-list__property\\\\\\\">{{company.bik}}</td>\\\\n        </tr>\\\\n{{/each}}\\\\n\\\",\\\"{\\\\n   type: 'company',\\\\n   id: 4,\\\\n   attributes: {\\\\n          shortName: 'Рога и копыта',\\\\n          fullName: 'ООО Рога и копыта',\\\\n          inn: '312312312',\\\\n          kpp: '767675572',\\\\n          checkingAccount: '3123145124',\\\\n          correspodentAccount: '6547598',\\\\n          bik: '76979356'\\\\n   },\\\\n },\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":-1,\"Python\":0,\"Java\":-1,\"HTML\":0,\"CSS\":2,\"Ruby\":0,\"Go\":-1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"json\",\"json-api\"],\"question_id\":41871321,\"creation_date\":1485426089,\"extraction_date\":\"2017-09-27T04:41:03.516Z\",\"title\":\"Should JSON Api attributes element contain nested objects?\",\"codeblocks\":\"[\\\"HTTP/1.1 200 OK\\\\nContent-Type: application/vnd.api+json\\\\n\\\\n{\\\\n  \\\\\\\"data\\\\\\\": [{\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"articles\\\\\\\",\\\\n    \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\": {\\\\n      \\\\\\\"title\\\\\\\": \\\\\\\"JSON API paints my bikeshed!\\\\\\\",\\\\n      \\\\\\\"body\\\\\\\": \\\\\\\"The shortest article. Ever.\\\\\\\",\\\\n      \\\\\\\"created\\\\\\\": \\\\\\\"2015-05-22T14:56:29.000Z\\\\\\\",\\\\n      \\\\\\\"updated\\\\\\\": \\\\\\\"2015-05-22T14:56:28.000Z\\\\\\\"\\\\n    },\\\\n    \\\\\\\"relationships\\\\\\\": {\\\\n      \\\\\\\"author\\\\\\\": {\\\\n        \\\\\\\"data\\\\\\\": {\\\\\\\"id\\\\\\\": \\\\\\\"42\\\\\\\", \\\\\\\"type\\\\\\\": \\\\\\\"people\\\\\\\"}\\\\n      }\\\\n    }\\\\n  }],\\\\n  \\\\\\\"included\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"people\\\\\\\",\\\\n      \\\\\\\"id\\\\\\\": \\\\\\\"42\\\\\\\",\\\\n      \\\\\\\"attributes\\\\\\\": {\\\\n        \\\\\\\"name\\\\\\\": \\\\\\\"John\\\\\\\",\\\\n        \\\\\\\"age\\\\\\\": 80,\\\\n        \\\\\\\"gender\\\\\\\": \\\\\\\"male\\\\\\\"\\\\n      }\\\\n    }\\\\n  ]\\\\n}\\\\n\\\",\\\"\\\\\\\"data\\\\\\\": [{\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"articles\\\\\\\",\\\\n        \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n        \\\\\\\"attributes\\\\\\\": {\\\\n          \\\\\\\"title\\\\\\\": \\\\\\\"JSON API paints my bikeshed!\\\\\\\",\\\\n          \\\\\\\"body\\\\\\\": \\\\\\\"The shortest article. Ever.\\\\\\\",\\\\n          \\\\\\\"created\\\\\\\": \\\\\\\"2015-05-22T14:56:29.000Z\\\\\\\",\\\\n          \\\\\\\"updated\\\\\\\": \\\\\\\"2015-05-22T14:56:28.000Z\\\\\\\",\\\\n          \\\\\\\"location\\\\\\\": \\\\n          { \\\\n             \\\\\\\"lat\\\\\\\": \\\\\\\"0.00\\\\\\\",\\\\n             \\\\\\\"long\\\\\\\": \\\\\\\"0.00\\\\\\\"}\\\\n        },\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"json\",\"json-api\"],\"question_id\":43017036,\"creation_date\":1490449076,\"extraction_date\":\"2017-09-27T04:41:03.525Z\",\"title\":\"Is it valid to add customized members when processing errors in JSONAPI\",\"codeblocks\":\"[\\\"{\\\\n  \\\\\\\"errors\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"changeid\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n      \\\\\\\"result\\\\\\\": \\\\\\\"true\\\\\\\",\\\\n      \\\\\\\"detail\\\\\\\": \\\\\\\"Successful\\\\\\\"\\\\n    },\\\\n    {\\\\n      \\\\\\\"changeid\\\\\\\": \\\\\\\"2\\\\\\\",\\\\n      \\\\\\\"result\\\\\\\": \\\\\\\"false\\\\\\\",\\\\n      \\\\\\\"detail\\\\\\\": \\\\\\\"Error detail message\\\\\\\"\\\\n    },\\\\n    {\\\\n      \\\\\\\"changeid\\\\\\\": \\\\\\\"3\\\\\\\",\\\\n      \\\\\\\"result\\\\\\\": \\\\\\\"\\\\\\\",\\\\n      \\\\\\\"detail\\\\\\\": \\\\\\\"Skipped\\\\\\\"\\\\n    }\\\\n  ]\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"rspec\",\"json-api\"],\"question_id\":43429463,\"creation_date\":1492279319,\"extraction_date\":\"2017-09-27T04:41:03.527Z\",\"title\":\"How to test Controller post :create of JSON api on rails using rspec?\",\"codeblocks\":\"[\\\"{\\\\n  \\\\\\\"data\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"id\\\\\\\": \\\\\\\"b99f8173-0492-457f-9de9-6c1d8d6832ed\\\\\\\",\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"manufacturer_organizations\\\\\\\",\\\\n      \\\\\\\"attributes\\\\\\\": {\\\\n        \\\\\\\"account_number\\\\\\\": \\\\\\\"random test 123\\\\\\\"\\\\n      },\\\\n      \\\\\\\"relationships\\\\\\\": {\\\\n        \\\\\\\"organization\\\\\\\": {\\\\n          \\\\\\\"data\\\\\\\": {\\\\n            \\\\\\\"id\\\\\\\": \\\\\\\"fb20ddc9-a3ee-47c3-bdd2-f710541ff89c\\\\\\\",\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"organizations\\\\\\\"\\\\n          }\\\\n        },\\\\n        \\\\\\\"manufacturer\\\\\\\": {\\\\n          \\\\\\\"data\\\\\\\": {\\\\n            \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"manufacturers\\\\\\\"\\\\n          }\\\\n        }\\\\n      }\\\\n    },...\\\\n\\\",\\\"post :create\\\",\\\"let!(:manufacturer_organization) {FactoryGirl.create(:manufacturer_organization)}\\\\nlet(:manufacturer_organization2) { FactoryGirl.create(:manufacturer_organization)}\\\\n\\\\n...\\\\n\\\\n  describe \\\\\\\"POST create\\\\\\\" do\\\\n    it \\\\\\\"posts a valid manufacturer organization data\\\\\\\" do\\\\n      authenticate\\\\n      organization = FactoryGirl.create(:organization)\\\\n      manufacturer = FactoryGirl.create(:manufacturer)\\\\n\\\\n      post :create, manufacturer_organization2.to_json #what should I put here instead?\\\\n\\\\n      expect(json['data'].length).to eq(2)\\\\n    end\\\\n\\\\n  #=> error: JSON::ParserError: A JSON text must at least contain two octets!\\\\n\\\",\\\"post :create, params: {organization_id: organization.id, manufacturer: manufacturer.id, account_number: \\\\\\\"123 test account number\\\\\\\"}\\\\n#=> error: JSON::ParserError:\\\\n   A JSON text must at least contain two octets!\\\\n\\\",\\\"post :create, params: :manufacturer_organization_2\\\\n#=> \\\\n NoMethodError:\\\\n   undefined method `symbolize_keys' for :manufacturer_organization_2:Symbol\\\\n\\\",\\\"json = { :format => 'json', :manufacturer_organization => { :account_number => \\\\\\\"foo123\\\\\\\", :organization_id => organization.id, :manufacturer_id => manufacturer.id } }\\\\npost :create, json\\\\n#=>  NoMethodError:\\\\n   undefined method `length' for nil:NilClass \\\\n\\\",\\\"manufacturer_id, organization_id, and account_number\\\",\\\"post :create\\\",\\\"json['data'].length\\\",\\\"json['data'].length\\\",\\\"post :create\\\",\\\"def json\\\\n  JSON.parse(response.body)\\\\nend\\\\n\\\",\\\"  describe \\\\\\\"POST create\\\\\\\" do\\\\n    it \\\\\\\"posts a valid manufacturer organization data\\\\\\\" do\\\\n      authenticate\\\\n      organization = FactoryGirl.create(:organization)\\\\n      manufacturer = FactoryGirl.create(:manufacturer)\\\\n      post :create, {account_number: \\\\\\\"Test account numba\\\\\\\", organization_id: organization.id, manufacturer_id: manufacturer.id}\\\\n      expect(response).to be_success\\\\n    end\\\\n\\\",\\\"expect(json['success']).to eq(\\\\\\\"Yay!\\\\\\\")\\\",\\\"JSON::ParserError:\\\\n       A JSON text must at least contain two octets!\\\",\\\"  def create\\\\n    @manufacturer_organization = ManufacturerOrganization.new(manufacturer_organization_params)\\\\n    if @manufacturer_organization.save\\\\n      puts \\\\\\\"success!\\\\\\\"\\\\n      render json: {success: \\\\\\\"Yay!\\\\\\\"}\\\\n    else\\\\n      puts \\\\\\\"Sorry, something went wrong!\\\\\\\"\\\\n    end\\\\n  end\\\\n\\\\n\\\\ndef manufacturer_organization_params\\\\n    api_params.permit(:organization_id, :manufacturer_id, :account_number)\\\\nend\\\\n\\\",\\\"@api_params ||= ActionController::Parameters.new(ActiveModelSerializers::Deserialization.jsonapi_parse(params))\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":4,\"C\":0,\"C++\":0,\"Python\":1,\"Java\":-1,\"HTML\":0,\"CSS\":0,\"Ruby\":4,\"Go\":2,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"json-api\"],\"question_id\":43718742,\"creation_date\":1493639854,\"extraction_date\":\"2017-09-27T04:41:03.528Z\",\"title\":\"EmberJS: Throw 404 from route model hook when store query results in empty collection\",\"codeblocks\":\"[\\\"Ember.store.query()\\\",\\\"query()\\\",\\\"200 OK\\\",\\\"my-model[]\\\",\\\"model()\\\",\\\"404\\\",\\\"import Ember from 'ember';\\\\n\\\\nexport default Ember.Route.extend({\\\\n\\\\nmodel(params) {\\\\n\\\\n    return this.store.query('my-model', {\\\\n        filter: {\\\\n            slug: params.myModelSlug\\\\n        }\\\\n    }).then((modelCollection) => {\\\\n\\\\n        // Code below fails when modelCollection is empty...\\\\n        return modelCollection.get('firstObject');\\\\n\\\\n        if (modelCollection.get('length') === 0) {\\\\n            // Throw new Ember Error 404?\\\\n        }\\\\n    });\\\\n}\\\\n});\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":5,\"C\":-1,\"C++\":1,\"Python\":0,\"Java\":2,\"HTML\":0,\"CSS\":2,\"Ruby\":0,\"Go\":0,\"PHP\":3,\"Unknown\":1}}},{\"tags\":[\"javascript\",\"ember.js\",\"ember-data\",\"json-api\",\"server-side-validation\"],\"question_id\":43876889,\"creation_date\":1494352960,\"extraction_date\":\"2017-09-27T04:41:03.530Z\",\"title\":\"How to properly save and validate model objects with other nested objects in Ember.js?\",\"codeblocks\":\"[\\\"person.get('phoneNumbers').setObjects([]);\\\\nphones.forEach((phone) => {\\\\n    if (!!phone.phone) {\\\\n        var p = null;\\\\n        if (!phone.id) {\\\\n            p = that.store.createRecord('phoneNumber', {\\\\n                'person': person,\\\\n                'number': phone.phone\\\\n            });\\\\n            person.get('phoneNumbers').pushObject(p);\\\\n        } else {\\\\n            p = that.store.peekRecord('phoneNumber', phone.id);\\\\n            p.person  = person;\\\\n            p.number = phone.phone;\\\\n            person.get('phoneNumbers').pushObject(p);\\\\n        }\\\\n    }\\\\n});\\\\n{...}\\\\nperson.save().then(function() {\\\\n    {...}\\\\n    that.store.unloadAll('phoneNumber'); //needs to be done to remove records created by createRecord - their saved duplicates will come back after model reload\\\\n    {...}\\\\n})\\\\n\\\",\\\"phones\\\",\\\"{\\\\n    \\\\\\\"errors\\\\\\\": [\\\\n        {\\\\n            \\\\\\\"detail\\\\\\\": \\\\\\\"This value is invalid\\\\\\\",\\\\n            \\\\\\\"source\\\\\\\": {\\\\n                \\\\\\\"pointer\\\\\\\": \\\\\\\"data/attributes/firstName\\\\\\\"\\\\n            }\\\\n        }\\\\n        {...}\\\\n    ]\\\\n}\\\\n\\\",\\\"{{ get model.errors propertyName }}\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":8,\"C\":0,\"C++\":0,\"Python\":2,\"Java\":3,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":-1,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"api\",\"pagination\",\"active-model-serializers\",\"json-api\"],\"question_id\":44752531,\"creation_date\":1498445386,\"extraction_date\":\"2017-09-27T04:41:03.533Z\",\"title\":\"How to encapsulating API response inside &quot;data&quot; keys and paginate them?\",\"codeblocks\":\"[\\\"def index\\\\n   seller = User.all.where(catagories: \\\\\\\"seller\\\\\\\")\\\\n   render json: seller, status: :ok,  status: :ok\\\\nend\\\\n\\\",\\\"UserSerializer\\\",\\\"  attributes :id, :name, :email, :phone_number, :verified\\\\n  has_many :products\\\\n  has_one :address`\\\\n\\\",\\\"{\\\\n    \\\\\\\"users\\\\\\\": [\\\\n        {\\\\n            \\\\\\\"id\\\\\\\": 1,\\\\n            \\\\\\\"name\\\\\\\": \\\\\\\"Craig Crist\\\\\\\",\\\\n            \\\\\\\"email\\\\\\\": \\\\\\\"adena_kiehn@greenfelder.com\\\\\\\",\\\\n            \\\\\\\"phone_number\\\\\\\": \\\\\\\"876.862.8760 x0096\\\\\\\",\\\\n            \\\\\\\"verified\\\\\\\": true,\\\\n            \\\\\\\"products\\\\\\\": [\\\\n                {\\\\n                    \\\\\\\"id\\\\\\\": 1,\\\\n                    \\\\\\\"name\\\\\\\": \\\\\\\"Direct Performance Transmitter\\\\\\\",\\\\n                    \\\\\\\"price\\\\\\\": 1000,\\\\n                    \\\\\\\"warranty\\\\\\\": false,\\\\n                    \\\\\\\"discount\\\\\\\": 50,\\\\n                    \\\\\\\"description\\\\\\\": \\\\\\\"Vel doloribus distinctio nihil rerum libero. Reprehenderit ratione cumque porro nesciunt. Id recusandae aut vel voluptatem aperiam hic deleniti voluptas.\\\\\\\"\\\\n                }\\\\n            ],\\\\n            \\\\\\\"address\\\\\\\": {\\\\n                \\\\\\\"id\\\\\\\": 1,\\\\n                \\\\\\\"latitude\\\\\\\": 41.022921,\\\\n                \\\\\\\"longitude\\\\\\\": -118.064638782714,\\\\n                \\\\\\\"street_name\\\\\\\": \\\\\\\"Beattystr.\\\\\\\",\\\\n                \\\\\\\"city\\\\\\\": \\\\\\\"Hermannport\\\\\\\"\\\\n            }\\\\n        }\\\\n\\\",\\\"data\\\",\\\"data : {\\\\n        \\\\\\\"users\\\\\\\": [\\\\n            {\\\\n                \\\\\\\"id\\\\\\\": 1,\\\\n                \\\\\\\"name\\\\\\\": \\\\\\\"Craig Crist\\\\\\\",\\\\n                \\\\\\\"email\\\\\\\": \\\\\\\"adena_kiehn@greenfelder.com\\\\\\\",\\\\n                \\\\\\\"phone_number\\\\\\\": \\\\\\\"876.862.8760 x0096\\\\\\\",\\\\n                \\\\\\\"verified\\\\\\\": true,\\\\n                \\\\\\\"products\\\\\\\": [\\\\n                    {\\\\n                        \\\\\\\"id\\\\\\\": 1,\\\\n                        \\\\\\\"name\\\\\\\": \\\\\\\"Direct Performance Transmitter\\\\\\\",\\\\n                        \\\\\\\"price\\\\\\\": 1000,\\\\n                        \\\\\\\"warranty\\\\\\\": false,\\\\n                        \\\\\\\"discount\\\\\\\": 50,\\\\n                        \\\\\\\"description\\\\\\\": \\\\\\\"Vel doloribus distinctio nihil rerum libero. Reprehenderit ratione cumque porro nesciunt. Id recusandae aut vel voluptatem aperiam hic deleniti voluptas.\\\\\\\"\\\\n                    }\\\\n                ],\\\\n                \\\\\\\"address\\\\\\\": {\\\\n                    \\\\\\\"id\\\\\\\": 1,\\\\n                    \\\\\\\"latitude\\\\\\\": 41.022921,\\\\n                    \\\\\\\"longitude\\\\\\\": -118.064638782714,\\\\n                    \\\\\\\"street_name\\\\\\\": \\\\\\\"Beattystr.\\\\\\\",\\\\n                    \\\\\\\"city\\\\\\\": \\\\\\\"Hermannport\\\\\\\"\\\\n                }\\\\n            }\\\\n\\\",\\\"data\\\",\\\" def index\\\\n   seller = User.all.where(catagories: \\\\\\\"seller\\\\\\\")\\\\n   render json:  { data: { user: seller } },  status: :ok\\\\nend\\\\n\\\",\\\"{\\\\n    \\\\\\\"data\\\\\\\": {\\\\n        \\\\\\\"user\\\\\\\": [\\\\n            {\\\\n                \\\\\\\"id\\\\\\\": 1,\\\\n                \\\\\\\"name\\\\\\\": \\\\\\\"Craig Crist\\\\\\\",\\\\n                \\\\\\\"email\\\\\\\": \\\\\\\"adena_kiehn@greenfelder.com\\\\\\\",\\\\n                \\\\\\\"phone_number\\\\\\\": \\\\\\\"876.862.8760 x0096\\\\\\\",\\\\n                \\\\\\\"verified\\\\\\\": true,\\\\n                \\\\\\\"avatar\\\\\\\": \\\\\\\"https://robohash.org/voluptatemsintnon.png?size=300x300\\\\\\\",\\\\n                \\\\\\\"badge\\\\\\\": 3,\\\\n                \\\\\\\"catagories\\\\\\\": \\\\\\\"seller\\\\\\\",\\\\n                \\\\\\\"rating\\\\\\\": 1,\\\\n                \\\\\\\"created_at\\\\\\\": \\\\\\\"2017-06-25T10:31:39.575Z\\\\\\\",\\\\n                \\\\\\\"updated_at\\\\\\\": \\\\\\\"2017-06-25T10:31:39.575Z\\\\\\\"\\\\n            }\\\\n\\\",\\\"gem 'api-pagination'\\\"]\",\"languages\":{\"detected\":\"Ruby\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":-1,\"Python\":0,\"Java\":-1,\"HTML\":0,\"CSS\":0,\"Ruby\":4,\"Go\":1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"json-api\",\"jsonapi-resources\"],\"question_id\":45024860,\"creation_date\":1499743658,\"extraction_date\":\"2017-09-27T04:41:03.534Z\",\"title\":\"jsonapi - Invalid links object on create request for parent and child records\",\"codeblocks\":\"[\\\"Redemptions\\\",\\\"{\\\\n  \\\\\\\"data\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"redemptions\\\\\\\",\\\\n    \\\\\\\"relationships\\\\\\\": {\\\\n      \\\\\\\"items\\\\\\\": {\\\\n        \\\\\\\"data\\\\\\\": [{\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"items\\\\\\\",\\\\n            \\\\\\\"attributes\\\\\\\": { \\\\\\\"offer_id\\\\\\\": \\\\\\\"1\\\\\\\", \\\\\\\"quantity\\\\\\\": \\\\\\\"2\\\\\\\" }\\\\n          },\\\\n          {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"items\\\\\\\",\\\\n            \\\\\\\"attributes\\\\\\\": { \\\\\\\"offer_id\\\\\\\": \\\\\\\"1\\\\\\\", \\\\\\\"quantity\\\\\\\": \\\\\\\"3\\\\\\\" }\\\\n          },\\\\n          {\\\\n            \\\\\\\"type\\\\\\\": \\\\\\\"items\\\\\\\",\\\\n            \\\\\\\"attributes\\\\\\\": { \\\\\\\"offer_id\\\\\\\": \\\\\\\"123\\\\\\\", \\\\\\\"quantity\\\\\\\": \\\\\\\"3\\\\\\\" }\\\\n          }\\\\n        ]\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\\n\\\",\\\"class Platform::Api::Members::RedemptionItemResource < JSONAPI::Resource\\\\n\\\\n  model_name 'Platform::RedemptionItem'\\\\n\\\\n  has_one :redemption\\\\n\\\\nend\\\\n\\\\n\\\\nclass Platform::Api::Members::RedemptionResource < JSONAPI::Resource\\\\n\\\\n  model_name 'Platform::Redemption'\\\\n\\\\n  has_many :items, class_name: 'RedemptionItem'\\\\n\\\\nend\\\\n\\\",\\\"{\\\\n  \\\\\\\"errors\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"title\\\\\\\": \\\\\\\"Invalid Links Object\\\\\\\",\\\\n      \\\\\\\"detail\\\\\\\": \\\\\\\"Data is not a valid Links Object.\\\\\\\",\\\\n      \\\\\\\"code\\\\\\\": \\\\\\\"115\\\\\\\",\\\\n      \\\\\\\"status\\\\\\\": \\\\\\\"400\\\\\\\"\\\\n    }\\\\n  ]\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":-1,\"C++\":1,\"Python\":2,\"Java\":1,\"HTML\":0,\"CSS\":0,\"Ruby\":1,\"Go\":-1,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"json\",\"swift\",\"serialization\",\"json-api\"],\"question_id\":45310444,\"creation_date\":1501005230,\"extraction_date\":\"2017-09-27T04:41:03.536Z\",\"title\":\"JSON API Document de-serializing and serializing using Spine Swift Library\",\"codeblocks\":\"[\\\"   let serializer = Serializer()\\\\n   serializer.registerResource(MyModel.self)\\\\n\\\",\\\"  let document = try! serializer.deserializeData(data) //data is my response as NSData\\\\n\\\",\\\"  document.included\\\\n\\\",\\\"  MyModel   = document.included[0] as! MyModel\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":1,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"json-api\"],\"question_id\":45597187,\"creation_date\":1502299970,\"extraction_date\":\"2017-09-27T04:41:03.537Z\",\"title\":\"jsonapi-rb Relationships Example\",\"codeblocks\":\"[\\\"{\\\\n   \\\\\\\"data\\\\\\\" : {\\\\n     \\\\\\\"type\\\\\\\": \\\\\\\"field_definition\\\\\\\",\\\\n     \\\\\\\"id\\\\\\\": 5,\\\\n     \\\\\\\"attributes\\\\\\\": {\\\\n        \\\\\\\"specifier\\\\\\\": \\\\\\\"foo\\\\\\\",\\\\n        \\\\\\\"entity_type\\\\\\\": \\\\\\\"bar\\\\\\\"\\\\n     }\\\\n     \\\\\\\"relationships\\\\\\\": {\\\\n        \\\\\\\"active_collections\\\\\\\" : [1,2,3]\\\\n     }\\\\n   }\\\\n}\\\\n\\\",\\\"  class Test\\\\n     attr_reader :id,\\\\n              :specifier,\\\\n              :entity_type,\\\\n              :active_collections\\\\n\\\\n      def initialize\\\\n        @id = 5\\\\n        @specifier = \\\\\\\"foo\\\\\\\"\\\\n        @entity_type = \\\\\\\"bar\\\\\\\"\\\\n        @active_collections = [1,2,3]\\\\n      end\\\\n    end\\\\n\\\",\\\"class SerializableFieldCollection < JSONAPI::Serializable::Resource\\\\n  type 'field_collection'\\\\n\\\\n  attributes :specifier, :entity_type\\\\n\\\\n  has_many :active_collections \\\\nend\\\\n\\\",\\\"  def index\\\\n    render jsonapi: Test.new,\\\\n           class:   SerializableFieldCollection,\\\\n           status:  200   \\\\n  end\\\\n\\\\n\\\\n{\\\\\\\"data\\\\\\\"=>\\\\n  {\\\\\\\"id\\\\\\\"=>\\\\\\\"5\\\\\\\", \\\\\\\"type\\\\\\\"=>\\\\\\\"field_collection\\\\\\\", \\\\\\\"attributes\\\\\\\"=>{\\\\\\\"specifier\\\\\\\"=>\\\\\\\"foo\\\\\\\", \\\\\\\"entity_type\\\\\\\"=>\\\\\\\"bar\\\\\\\"}, \\\\\\\"relationships\\\\\\\"=>{\\\\\\\"active_collections\\\\\\\"=>{\\\\\\\"meta\\\\\\\"=>{\\\\\\\"included\\\\\\\"=>false}}}}}\\\\n\\\"]\",\"languages\":{\"detected\":\"Ruby\",\"statistics\":{\"JavaScript\":2,\"C\":-1,\"C++\":1,\"Python\":0,\"Java\":1,\"HTML\":0,\"CSS\":0,\"Ruby\":5,\"Go\":1,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"java\",\"spring\",\"spring-boot\",\"json-api\",\"katharsis\"],\"question_id\":46062656,\"creation_date\":1504642148,\"extraction_date\":\"2017-09-27T04:41:03.538Z\",\"title\":\"Json-API : format custom Rest endPoint in SpringBoot\",\"codeblocks\":\"[\\\"@Configuration\\\\n@SpringBootApplication\\\\n@Import({KatharsisConfigV3.class})\\\\npublic class MyApplication {\\\\n    //default Spring boot main\\\\n}\\\\n\\\",\\\"@RequestMapping(value = \\\\\\\"/api/myobjects\\\\\\\", method = RequestMethod.GET)\\\\npublic List<MyObjectVO> getMyObjects() {\\\\n    // Get and return complex objects after several tests on data\\\\n}\\\\n\\\",\\\"@JsonApiResource(type = \\\\\\\"myObject\\\\\\\")\\\\npublic class MyObjectVO{\\\\n    @JsonApiId\\\\n    private String id;\\\\n    private String name;\\\\n    // etc...\\\\n}\\\\n\\\",\\\"katharsis.pathPrefix=/api\\\\nkatharsis.resourcePackage=com.me\\\\n\\\"]\",\"languages\":{\"detected\":\"Java\",\"statistics\":{\"JavaScript\":0,\"C\":1,\"C++\":1,\"Python\":0,\"Java\":8,\"HTML\":0,\"CSS\":0,\"Ruby\":2,\"Go\":1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"javascript\",\"angular\",\"typescript\",\"rxjs\",\"json-api\"],\"question_id\":46280016,\"creation_date\":1505739837,\"extraction_date\":\"2017-09-27T04:41:03.541Z\",\"title\":\"Keep relation between nested http calls to JSON-API with Observables\",\"codeblocks\":\"[\\\".../api/v1/studies/1\\\",\\\"{type: \\\\\\\"study\\\\\\\", id: \\\\\\\"1\\\\\\\", attributes: Object}\\\\n{type: \\\\\\\"study\\\\\\\", id: \\\\\\\"2\\\\\\\", attributes: Object}\\\\n\\\",\\\".../api/v1/questionnaires/4\\\",\\\"{type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"4\\\\\\\", attributes: Object}\\\\n{type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"5\\\\\\\", attributes: Object}\\\\n{type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"6\\\\\\\", attributes: Object}\\\\n{type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"7\\\\\\\", attributes: Object}\\\\n{type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"8\\\\\\\", attributes: Object}\\\\n\\\",\\\"{type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"4\\\\\\\", attributes: Object, associatedStudyId: \\\\\\\"1\\\\\\\"}\\\\n{type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"5\\\\\\\", attributes: Object, associatedStudyId: \\\\\\\"1\\\\\\\"}\\\\n{type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"6\\\\\\\", attributes: Object, associatedStudyId: \\\\\\\"1\\\\\\\"}\\\\n{type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"7\\\\\\\", attributes: Object, associatedStudyId: \\\\\\\"2\\\\\\\"}\\\\n{type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"8\\\\\\\", attributes: Object, associatedStudyId: \\\\\\\"2\\\\\\\"}\\\\n\\\",\\\".../api/v1/studies/1/questionnaires\\\",\\\"[{\\\\\\\"type\\\\\\\": \\\\\\\"questionnaires\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"4\\\\\\\"},{\\\\\\\"type\\\\\\\": \\\\\\\"questionnaires\\\\\\\",\\\\\\\"id\\\\\\\": \\\\\\\"5\\\\\\\"}]\\\\n\\\",\\\"getQuestionnaires(studyIds) {\\\\nconsole.log(studyIds); // see output [1]\\\\nthis.editableQuestionnaires = [];\\\\n\\\\nlet studyIdsObs = Rx.Observable.from(studyIds);\\\\n\\\\nlet questShortStream = studyIdsObs.flatMap((id) => {\\\\n  return this.apiService.getQuestionnairesOfStudy(id)\\\\n});\\\\n\\\\nquestShortStream.subscribe(console.log);\\\\n\\\\nlet questsAndStudyId = Rx.Observable.zip(studyIdsObs, questShortStream,\\\\n  (id, quests) => {\\\\n    return {\\\\n      studyId: id,\\\\n      questionnaires: quests\\\\n    }\\\\n  })\\\\n\\\\nquestsAndStudyId.subscribe(console.log) // see output [2]\\\\n\\\\nlet studyIdAndQuestIds = questsAndStudyId.map((obj) => {\\\\n  let questIds = [];\\\\n  for (let i = 0; i < obj.questionnaires.length; i++) {\\\\n    questIds.push(obj.questionnaires[i].id);\\\\n  }\\\\n  return {\\\\n    studyId: obj.studyId,\\\\n    questionnaireIds: questIds\\\\n  }\\\\n});\\\\n\\\\nstudyIdAndQuestIds.subscribe(console.log); // see output [3]\\\\n\\\\nlet questionnaireIdsObs = studyIdAndQuestIds.flatMap(obj => {\\\\n  return Rx.Observable.from(obj.questionnaireIds);\\\\n})\\\\n\\\\nquestionnaireIdsObs.subscribe(console.log) // see output[4]\\\\n\\\\nlet questionnairesObs = questionnaireIdsObs.flatMap(id => this.apiService.getEditableQuestionnaire(id))\\\\n\\\\nquestionnairesObs.subscribe(console.log) // see output [5]\\\\n\\\",\\\"[ \\\\\\\"1\\\\\\\", \\\\\\\"2\\\\\\\", \\\\\\\"3\\\\\\\" ]\\\\n\\\",\\\"[ Object, Object ]\\\\n[ Object, Object, Object ]\\\\n\\\",\\\"Object { studyId: \\\\\\\"1\\\\\\\", questionnaires: Array[3] }\\\\nObject { studyId: \\\\\\\"2\\\\\\\", questionnaires: Array[2] }\\\\n\\\",\\\"4\\\\n5\\\\n6\\\\n7\\\\n8\\\\n\\\",\\\"Object { type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"4\\\\\\\", attributes: Object}\\\\nObject { type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"5\\\\\\\", attributes: Object}   \\\\nObject { type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"6\\\\\\\", attributes: Object}\\\\nObject { type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"7\\\\\\\", attributes: Object}\\\\nObject { type: \\\\\\\"questionnaires\\\\\\\", id: \\\\\\\"8\\\\\\\", attributes: Object}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":5,\"C\":2,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":2,\"Ruby\":0,\"Go\":1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"json\",\"wordpress\",\"json-api\"],\"question_id\":25352457,\"creation_date\":1408300916,\"extraction_date\":\"2017-09-27T04:41:03.542Z\",\"title\":\"How To Tell When A JSON Request Is Received In Wordpress?\",\"codeblocks\":\"[\\\"the_content\\\",\\\"remove_shortcode\\\",\\\"http://example.com?json=1\\\",\\\"json=1\\\",\\\"json\\\",\\\"JSONP\\\",\\\"if(is_json()){\\\\n//remove shortcodes\\\\n}\\\\n\\\",\\\"  $.ajax({\\\\n                    url: \\\\\\\"http://www.example.com/?json=1\\\\\\\",\\\\n                    dataType: \\\\\\\"jsonp\\\\\\\",\\\\n                    async: true,\\\\n                    success: function(result) {\\\\n                        app.populate(result)\\\\n                    },\\\\n                    error: function(request, error) {\\\\n                        alert('Network error has occurred please try again!');\\\\n                    }\\\\n                });\\\\n\\\"]\",\"languages\":{\"detected\":\"CSS\",\"statistics\":{\"JavaScript\":1,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":2,\"Ruby\":2,\"Go\":-1,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"ruby-on-rails-4\",\"json-api\"],\"question_id\":31232827,\"creation_date\":1436115656,\"extraction_date\":\"2017-09-27T04:41:03.543Z\",\"title\":\"How to construct the following JSONAPI url in Rails?\",\"codeblocks\":\"[\\\"/articles/1/relationships/author\\\\n\\\",\\\"routes.rb\\\",\\\"resources :articles do\\\\n  # What goes here?\\\\n  # Should relationship be a namespace or other?\\\\n  # I guess author can be defined as a collection, or just a simple get\\\\nend\\\\n\\\",\\\"relationships\\\"]\",\"languages\":{\"detected\":\"Unknown\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"node.js\",\"json-api\"],\"question_id\":33263695,\"creation_date\":1445442402,\"extraction_date\":\"2017-09-27T04:41:03.544Z\",\"title\":\"Getting started with FortuneJS\",\"codeblocks\":\"[\\\"{\\\\n  \\\\\\\"data\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"user\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\": {\\\\n      \\\\\\\"name\\\\\\\": \\\\\\\"Andrew\\\\\\\"\\\\n    }\\\\n  }\\\\n}\\\\n\\\",\\\"{\\\\n  \\\\\\\"data\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"users\\\\\\\",\\\\n    \\\\\\\"id\\\\\\\": \\\\\\\"37446bbc\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\": {\\\\n      \\\\\\\"name\\\\\\\": \\\\\\\"Andrew\\\\\\\"\\\\n    },\\\\n    \\\\\\\"relationships\\\\\\\": {\\\\n      \\\\\\\"posts\\\\\\\": {\\\\n        \\\\\\\"links\\\\\\\": {\\\\n          \\\\\\\"self\\\\\\\": \\\\\\\"http://localhost:1337/users/37446bbc/relationships/posts\\\\\\\",\\\\n          \\\\\\\"related\\\\\\\": \\\\\\\"http://localhost:1337/users/37446bbc/posts\\\\\\\"\\\\n        },\\\\n        \\\\\\\"data\\\\\\\": []\\\\n      }\\\\n    },\\\\n    \\\\\\\"links\\\\\\\": {\\\\n      \\\\\\\"self\\\\\\\": \\\\\\\"http://localhost:1337/users/37446bbc\\\\\\\"\\\\n    }\\\\n  }\\\\n}\\\\n\\\",\\\"{\\\\n  \\\\\\\"data\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"posts\\\\\\\",\\\\n    \\\\\\\"attributes\\\\\\\": {\\\\n      \\\\\\\"message\\\\\\\": \\\\\\\"This is my first post\\\\\\\"\\\\n    },\\\\n    \\\\\\\"relationships\\\\\\\": {\\\\n      \\\\\\\"author\\\\\\\": {\\\\n        \\\\\\\"data\\\\\\\": { \\\\\\\"type\\\\\\\": \\\\\\\"users\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"37446bbc\\\\\\\" }\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\\n\\\",\\\"{\\\\n  \\\\\\\"errors\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"title\\\\\\\": \\\\\\\"Error\\\\\\\",\\\\n      \\\\\\\"detail\\\\\\\": \\\\\\\"An internal server error occurred.\\\\\\\"\\\\n    }\\\\n  ]\\\\n}\\\\n\\\",\\\"[TypeError: Cannot set property 'user' of undefined]\\\",\\\"babel-node app.js\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":4,\"C\":-1,\"C++\":-1,\"Python\":0,\"Java\":-1,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":-1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"ember-data\",\"json-api\"],\"question_id\":36757187,\"creation_date\":1461196226,\"extraction_date\":\"2017-09-27T04:41:03.544Z\",\"title\":\"Adding many-to-many relationships in ember data using JSONAPI\",\"codeblocks\":\"[\\\"// User\\\\nexport default DS.Model.create({\\\\n  name: DS.attr('string'),\\\\n  authorities: DS.hasMany()\\\\n});\\\\n\\\\n// Authority\\\\nexport default DS.Model.create({\\\\n  name: DS.attr('string'),\\\\n  users: DS.hasMany()\\\\n});\\\\n\\\",\\\"user.get('authorities').pushObject(authority);\\\\n\\\",\\\"POST /users/XXX/relationships/authorities\\\\n{\\\\n  \\\\\\\"data\\\\\\\": [\\\\n    { \\\\\\\"type\\\\\\\": \\\\\\\"authorities\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"YYY\\\\\\\" },\\\\n  ]\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":-1,\"C++\":-1,\"Python\":0,\"Java\":1,\"HTML\":0,\"CSS\":2,\"Ruby\":0,\"Go\":-1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails-4\",\"active-model-serializers\",\"json-api\"],\"question_id\":36983596,\"creation_date\":1462195599,\"extraction_date\":\"2017-09-27T04:41:03.546Z\",\"title\":\"Active Model Serializers data attributes from associations are not loading\",\"codeblocks\":\"[\\\"#app/controllers/store/products_controller.rb\\\\n  def customize\\\\n    @option_types = OptionType.all\\\\n    respond_to do |format|\\\\n      format.json { render :json => @option_types}\\\\n    end\\\\n  end\\\\n\\\",\\\"#app/serializers/option_type_serializer.rb\\\\nclass OptionTypeSerializer < ActiveModel::Serializer\\\\n  attributes :id, :key, :customizable, :name\\\\n  has_many :option_values\\\\nend\\\\n\\\",\\\"belong_to\\\",\\\"#app/serializers/option_value_serializer.rb\\\\nclass OptionValueSerializer < ActiveModel::Serializer\\\\n  attributes :id, :key, :option_type_id, :percentage_price_impact, :fixed_price_impact, :absolute_price_impact, :name\\\\nend\\\\n\\\",\\\"// http://0.0.0.0:3000/products/810/customize.json\\\\n{\\\\n  \\\\\\\"data\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"option-types\\\\\\\",\\\\n      \\\\\\\"attributes\\\\\\\": {\\\\n        \\\\\\\"key\\\\\\\": \\\\\\\"fabric\\\\\\\",\\\\n        \\\\\\\"customizable\\\\\\\": true,\\\\n        \\\\\\\"name\\\\\\\": \\\\\\\"FABRIC\\\\\\\"\\\\n      },\\\\n      \\\\\\\"relationships\\\\\\\": {\\\\n        \\\\\\\"option-values\\\\\\\": {\\\\n          \\\\\\\"data\\\\\\\": [\\\\n            {\\\\n              \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\",\\\\n              \\\\\\\"type\\\\\\\": \\\\\\\"option-values\\\\\\\"\\\\n            },\\\\n            {\\\\n              \\\\\\\"id\\\\\\\": \\\\\\\"2\\\\\\\",\\\\n              \\\\\\\"type\\\\\\\": \\\\\\\"option-values\\\\\\\"\\\\n            }\\\\n          ]\\\\n        }\\\\n      }\\\\n    },\\\\n    {\\\\n      \\\\\\\"id\\\\\\\": \\\\\\\"2\\\\\\\",\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"option-types\\\\\\\",\\\\n      \\\\\\\"attributes\\\\\\\": {\\\\n        \\\\\\\"key\\\\\\\": \\\\\\\"cuff-type\\\\\\\",\\\\n        \\\\\\\"customizable\\\\\\\": false,\\\\n        \\\\\\\"name\\\\\\\": \\\\\\\"CUFF TYPE\\\\\\\"\\\\n      },\\\\n      \\\\\\\"relationships\\\\\\\": {\\\\n        \\\\\\\"option-values\\\\\\\": {\\\\n          \\\\\\\"data\\\\\\\": [\\\\n\\\\n          ]\\\\n        }\\\\n      }\\\\n    },\\\\n    {\\\\n      \\\\\\\"id\\\\\\\": \\\\\\\"3\\\\\\\",\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"option-types\\\\\\\",\\\\n      \\\\\\\"attributes\\\\\\\": {\\\\n        \\\\\\\"key\\\\\\\": \\\\\\\"vents\\\\\\\",\\\\n        \\\\\\\"customizable\\\\\\\": false,\\\\n        \\\\\\\"name\\\\\\\": \\\\\\\"VENTS\\\\\\\"\\\\n      },\\\\n      \\\\\\\"relationships\\\\\\\": {\\\\n        \\\\\\\"option-values\\\\\\\": {\\\\n          \\\\\\\"data\\\\\\\": [\\\\n\\\\n          ]\\\\n        }\\\\n      }\\\\n    }\\\\n  ]\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"Ruby\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":2,\"Python\":0,\"Java\":2,\"HTML\":0,\"CSS\":0,\"Ruby\":7,\"Go\":0,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"json-api\"],\"question_id\":40438125,\"creation_date\":1478348072,\"extraction_date\":\"2017-09-27T04:41:03.547Z\",\"title\":\"usage of JSON API links section\",\"codeblocks\":\"[\\\"{\\\\n  \\\\\\\"data\\\\\\\": {\\\\n    \\\\\\\"type\\\\\\\": \\\\\\\"submarine\\\\\\\",\\\\n    \\\\\\\"id\\\\\\\": \\\\\\\"yellow\\\\\\\",\\\\n    \\\\\\\"links\\\\\\\": {\\\\n      \\\\\\\"sailor\\\\\\\": \\\\\\\"https://example.com/sailors\\\\\\\",\\\\n      \\\\\\\"stowaway\\\\\\\": \\\\\\\"https://example.com/stowaways\\\\\\\",\\\\n      \\\\\\\"surface\\\\\\\": \\\\\\\"https://example.com/submarines/yellow/surface\\\\\\\",\\\\n      \\\\\\\"crew\\\\\\\": \\\\\\\"https://example.com/submarines/yellow/crew\\\\\\\"\\\\n    },\\\\n    \\\\\\\"attributes\\\\\\\": {\\\\n      \\\\\\\"is_submerged\\\\\\\": true\\\\n    },\\\\n    \\\\\\\"relationships\\\\\\\": {\\\\n      \\\\\\\"crew\\\\\\\": {\\\\n        \\\\\\\"data\\\\\\\": [\\\\n          {\\\\\\\"type\\\\\\\": \\\\\\\"sailor\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"john\\\\\\\"},\\\\n          {\\\\\\\"type\\\\\\\": \\\\\\\"sailor\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"paul\\\\\\\"},\\\\n          {\\\\\\\"type\\\\\\\": \\\\\\\"sailor\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"george\\\\\\\"},\\\\n          {\\\\\\\"type\\\\\\\": \\\\\\\"sailor\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"ringo\\\\\\\"}\\\\n        ]\\\\n      },\\\\n      \\\\\\\"stowaways\\\\\\\": {\\\\n        \\\\\\\"data\\\\\\\": [\\\\n          {\\\\\\\"type\\\\\\\": \\\\\\\"stowaway\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"bootleg-beatles\\\\\\\"}\\\\n        ]\\\\n      }\\\\n    }\\\\n  }\\\\n}\\\\n\\\",\\\"POST\\\",\\\"GET\\\",\\\"POST\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ember.js\",\"json-api\",\"ember-components\"],\"question_id\":40797468,\"creation_date\":1480046169,\"extraction_date\":\"2017-09-27T04:41:03.548Z\",\"title\":\"Using JSON API response within Ember component\",\"codeblocks\":\"[\\\"ember-ajax\\\",\\\"200\\\",\\\"422\\\",\\\"{\\\\n    \\\\\\\"errors\\\\\\\": [\\\\n         {\\\\n              \\\\\\\"status\\\\\\\":\\\\\\\"422\\\\\\\",\\\\n              \\\\\\\"detail\\\\\\\":\\\\\\\"Error analyzing permalink: Permalink for 'test-page-title' already exists.\\\\\\\",\\\\n              \\\\\\\"source\\\\\\\":{\\\\n                  \\\\\\\"pointer\\\\\\\":\\\\\\\"data/attributes/permalink\\\\\\\"\\\\n              }\\\\n         }\\\\n    ]\\\\n}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":-1,\"C++\":-1,\"Python\":0,\"Java\":-1,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":-1,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"validation\",\"ember.js\",\"error-handling\",\"ember-data\",\"json-api\"],\"question_id\":41552649,\"creation_date\":1483979755,\"extraction_date\":\"2017-09-27T04:41:03.549Z\",\"title\":\"Ember-Data validation response with EmbeddedRecordsMixin\",\"codeblocks\":\"[\\\"JsonApiSerializer and Adapter\\\",\\\"{\\\\n    \\\\\\\"data\\\\\\\": {\\\\n        \\\\\\\"type\\\\\\\": \\\\\\\"sales-invoices\\\\\\\",\\\\n        \\\\\\\"attributes\\\\\\\": {\\\\n            \\\\\\\"name\\\\\\\": null,\\\\n            \\\\\\\"net-price\\\\\\\": 29,\\\\n            \\\\\\\"vat-amount\\\\\\\": 6.09,\\\\n            \\\\\\\"gross-price\\\\\\\": 35.09\\\\n        },\\\\n        \\\\\\\"relationships\\\\\\\": {\\\\n            \\\\\\\"customer\\\\\\\": {\\\\n                \\\\\\\"data\\\\\\\": {\\\\n                    \\\\\\\"type\\\\\\\": \\\\\\\"companies\\\\\\\",\\\\n                    \\\\\\\"id\\\\\\\": \\\\\\\"131\\\\\\\"\\\\n                }\\\\n            },\\\\n            \\\\\\\"organization\\\\\\\": {\\\\n                \\\\\\\"data\\\\\\\": {\\\\n                    \\\\\\\"type\\\\\\\": \\\\\\\"organizations\\\\\\\",\\\\n                    \\\\\\\"id\\\\\\\": \\\\\\\"3\\\\\\\"\\\\n                }\\\\n            }\\\\n        },\\\\n        \\\\\\\"sales-invoice-lines\\\\\\\": [\\\\n            {\\\\n                \\\\\\\"data\\\\\\\": {\\\\n                    \\\\\\\"attributes\\\\\\\": {\\\\n                        \\\\\\\"name\\\\\\\": \\\\\\\"Basic Linux Hosting\\\\\\\",\\\\n                        \\\\\\\"sort\\\\\\\": 0,\\\\n                        \\\\\\\"unit-price\\\\\\\": 9,\\\\n                        \\\\\\\"quantity\\\\\\\": 1,\\\\n                        \\\\\\\"total\\\\\\\": 9,\\\\n                        \\\\\\\"net-price\\\\\\\": 9,\\\\n                        \\\\\\\"vat-amount\\\\\\\": 1.89,\\\\n                        \\\\\\\"gross-price\\\\\\\": 10.89,\\\\n                        \\\\\\\"created\\\\\\\": null,\\\\n                        \\\\\\\"changed\\\\\\\": null\\\\n                    },\\\\n                    \\\\\\\"relationships\\\\\\\": {\\\\n                        \\\\\\\"sales-invoice\\\\\\\": {\\\\n                            \\\\\\\"data\\\\\\\": {\\\\n                                \\\\\\\"type\\\\\\\": \\\\\\\"sales-invoices\\\\\\\",\\\\n                                \\\\\\\"id\\\\\\\": null\\\\n                            }\\\\n                        },\\\\n                        \\\\\\\"vat-rate\\\\\\\": {\\\\n                            \\\\\\\"data\\\\\\\": {\\\\n                                \\\\\\\"type\\\\\\\": \\\\\\\"vat-rates\\\\\\\",\\\\n                                \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\"\\\\n                            }\\\\n                        }\\\\n                    },\\\\n                    \\\\\\\"type\\\\\\\": \\\\\\\"sales-invoice-lines\\\\\\\"\\\\n                }\\\\n            },\\\\n            {\\\\n                \\\\\\\"data\\\\\\\": {\\\\n                    \\\\\\\"attributes\\\\\\\": {\\\\n                        \\\\\\\"name\\\\\\\": \\\\\\\"Extra .com domain\\\\\\\",\\\\n                        \\\\\\\"sort\\\\\\\": 1,\\\\n                        \\\\\\\"unit-price\\\\\\\": 20,\\\\n                        \\\\\\\"quantity\\\\\\\": 1,\\\\n                        \\\\\\\"total\\\\\\\": 20,\\\\n                        \\\\\\\"net-price\\\\\\\": 20,\\\\n                        \\\\\\\"vat-amount\\\\\\\": 4.2,\\\\n                        \\\\\\\"gross-price\\\\\\\": 24.2,\\\\n                        \\\\\\\"created\\\\\\\": null,\\\\n                        \\\\\\\"changed\\\\\\\": null\\\\n                    },\\\\n                    \\\\\\\"relationships\\\\\\\": {\\\\n                        \\\\\\\"sales-invoice\\\\\\\": {\\\\n                            \\\\\\\"data\\\\\\\": {\\\\n                                \\\\\\\"type\\\\\\\": \\\\\\\"sales-invoices\\\\\\\",\\\\n                                \\\\\\\"id\\\\\\\": null\\\\n                            }\\\\n                        },\\\\n                        \\\\\\\"vat-rate\\\\\\\": {\\\\n                            \\\\\\\"data\\\\\\\": {\\\\n                                \\\\\\\"type\\\\\\\": \\\\\\\"vat-rates\\\\\\\",\\\\n                                \\\\\\\"id\\\\\\\": \\\\\\\"1\\\\\\\"\\\\n                            }\\\\n                        }\\\\n                    },\\\\n                    \\\\\\\"type\\\\\\\": \\\\\\\"sales-invoice-lines\\\\\\\"\\\\n                }\\\\n            }\\\\n        ]\\\\n    }\\\\n}\\\\n\\\",\\\"{\\\\n  \\\\\\\"errors\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"detail\\\\\\\": \\\\\\\"This value should not be null.\\\\\\\",\\\\n      \\\\\\\"source\\\\\\\": {\\\\n        \\\\\\\"pointer\\\\\\\": \\\\\\\"/data/attributes/name\\\\\\\"\\\\n      }\\\\n    },\\\\n    {\\\\n      \\\\\\\"detail\\\\\\\": \\\\\\\"This value should not be 0\\\\\\\",\\\\n      \\\\\\\"source\\\\\\\": {\\\\n        \\\\\\\"pointer\\\\\\\": \\\\\\\"/data/sales-invoice-lines/0/data/attributes/sort\\\\\\\"\\\\n      }\\\\n    }\\\\n  ]\\\\n}\\\\n\\\",\\\"sales-invoice-lines\\\",\\\"/data/sales-invoice-lines/0/data\\\",\\\"/data/sales-invoice-lines/1/data\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":3,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":1,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}},{\"tags\":[\"ruby-on-rails\",\"json-api\"],\"question_id\":42381570,\"creation_date\":1487730203,\"extraction_date\":\"2017-09-27T04:41:03.550Z\",\"title\":\"How to deserialize parameters with relationships using ActiveModelSerializers?\",\"codeblocks\":\"[\\\"def action_record_params\\\\n  ActiveModelSerializers::Deserialization.jsonapi_parse!(params)\\\\nend\\\\n\\\",\\\"relationships\\\",\\\"params = {\\\\\\\"data\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"action_record\\\\\\\", \\\\\\\"attributes\\\\\\\": {\\\\\\\"value\\\\\\\": \\\\\\\"\\\\\\\"}}, \\\\\\\"relationships\\\\\\\": {\\\\\\\"card\\\\\\\": {\\\\\\\"data\\\\\\\": {\\\\\\\"type\\\\\\\": \\\\\\\"card\\\\\\\", \\\\\\\"id\\\\\\\": \\\\\\\"#{card.id}\\\\\\\"}}}}\\\\n\\\",\\\"{:value=>\\\\\\\"\\\\\\\"}\\\\n\\\"]\",\"languages\":{\"detected\":\"JavaScript\",\"statistics\":{\"JavaScript\":2,\"C\":0,\"C++\":1,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":1,\"Go\":0,\"PHP\":1,\"Unknown\":1}}},{\"tags\":[\"json\",\"json-api\"],\"question_id\":42828612,\"creation_date\":1489652304,\"extraction_date\":\"2017-09-27T04:41:03.550Z\",\"title\":\"JSON-API How to Fetch Products Except Out of Stock?\",\"codeblocks\":\"[\\\"where not exists other relationship\\\",\\\"out_of_stock\\\"]\",\"languages\":{\"detected\":\"Unknown\",\"statistics\":{\"JavaScript\":0,\"C\":0,\"C++\":0,\"Python\":0,\"Java\":0,\"HTML\":0,\"CSS\":0,\"Ruby\":0,\"Go\":0,\"PHP\":0,\"Unknown\":1}}}]}"