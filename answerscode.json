{"items":[{"question_id":15541228,"creation_date":1504594491,"extraction_date":"2017-11-04T23:43:05.449Z","codeblocks":"[\"HttpWebRequest httpWReq =\\n                (HttpWebRequest)WebRequest.Create(\\\"https://api.box.com/oauth2/token\\\");\\n\\n            ASCIIEncoding encoding = new ASCIIEncoding();\\n            string postData = \\\"grant_type=authorization_code\\\";\\n            postData += \\\"&code=\\\" + authorizationCode;\\n            postData += \\\"&client_id=\\\" + ClientId;\\n            postData += \\\"&client_secret=\\\" + ClientSecretId;\\n            byte[] data = encoding.GetBytes(postData);\\n\\n            httpWReq.Method = \\\"POST\\\";\\n            httpWReq.ContentType = \\\"application/x-www-form-urlencoded\\\";\\n            //httpWReq.ContentType = \\\"application/x-www-form-urlencoded\\\";\\n            httpWReq.ContentLength = data.Length;\\n\\n            using (Stream stream = httpWReq.GetRequestStream())\\n            {\\n                stream.Write(data, 0, data.Length);\\n            }\\n\"]","languages":{"detected":"Java","statistics":{"JavaScript":0,"C":1,"C++":1,"Python":0,"Java":4,"HTML":0,"CSS":2,"Ruby":0,"Go":1,"PHP":1,"Unknown":1}}},{"question_id":45478218,"creation_date":1504208952,"extraction_date":"2017-11-04T23:43:05.453Z","codeblocks":"[\"composer require lcobucci/jwt:^3.2\",\"<?php\\nuse Lcobucci\\\\JWT\\\\Builder;\\nuse Lcobucci\\\\JWT\\\\Signer\\\\Keychain; // just to make our life simpler\\nuse Lcobucci\\\\JWT\\\\Signer\\\\Rsa\\\\Sha256; // you can use Lcobucci\\\\JWT\\\\Signer\\\\Ecdsa\\\\Sha256 if you're using ECDSA keys\\n\\n$signer = new Sha256();\\n$keychain = new Keychain();\\n$token = (new Builder())\\n    ->setIssuer('http://example.com') // Configures the issuer (iss claim)\\n    ->setAudience('http://example.org') // Configures the audience (aud claim)\\n    ->setId('4f1g23a12aa', true) // Configures the id (jti claim), replicating as a header item\\n    ->setIssuedAt(time()) // Configures the time that the token was issue (iat claim)\\n    ->setNotBefore(time() + 60) // Configures the time that the token can be used (nbf claim)\\n    ->setExpiration(time() + 3600) // Configures the expiration time of the token (nbf claim)\\n    ->set('uid', 1) // Configures a new claim, called \\\"uid\\\"\\n    ->sign($signer,  $keychain->getPrivateKey('file://{path to your private key}')) // creates a signature using your private key\\n    ->getToken(); // Retrieves the generated token\\n\",\"openssl_sign\",\"Resource #xx\",\"<?php\\n// Data to sign\\n$payload = 'TEST';\\n// Generate a new key, load with: openssl_pkey_get_private\\n$privateKey = openssl_pkey_new(array('private_key_bits' => 512)); // NOT SECURE BUT FAST\\n// Extract public part from private key\\n$details = openssl_pkey_get_details($privateKey);\\n// Use openssl_pkey_get_public to load from file\\n$publicKey = $details['key'];\\n\\n// Generated by openssl_sign\\n$signature = null;\\n// Sign with private key\\nopenssl_sign($payload, $signature, $privateKey, OPENSSL_ALGO_SHA256);\\n\\n// Use base64 because the signature contains binairy data\\necho 'Signed data: '.base64_encode($signature).PHP_EOL;\\n\\n// Use publicKey to verify signature\\n$valid = openssl_verify($payload, $signature, $publicKey, OPENSSL_ALGO_SHA256);\\necho 'Signature is '.($valid ? 'Valid' : 'Invalid').PHP_EOL;\\n\"]","languages":{"detected":"PHP","statistics":{"JavaScript":1,"C":-2,"C++":0,"Python":2,"Java":4,"HTML":-50,"CSS":2,"Ruby":0,"Go":-1,"PHP":7,"Unknown":1}}},{"question_id":43253959,"creation_date":1491546783,"extraction_date":"2017-11-04T23:43:05.454Z","codeblocks":"[\"FALSE\",\"FALSE\",\"<cfhttp url=\\\"https://api.box.com/2.0/files/(FILE_ID)/content/\\\" method=\\\"GET\\\" redirect=\\\"false\\\" >\\n<cfhttpparam type=\\\"header\\\" name=\\\"Authorization\\\" value=\\\"Bearer (DEVELOPER_TOKEN)\\\">\\n</cfhttp>\\n\",\"302 found\",\"Location\"]","languages":{"detected":"C","statistics":{"JavaScript":0,"C":1,"C++":0,"Python":0,"Java":0,"HTML":0,"CSS":0,"Ruby":0,"Go":0,"PHP":0,"Unknown":1}}},{"question_id":21613359,"creation_date":1427958339,"extraction_date":"2017-11-04T23:43:05.459Z","codeblocks":"[\"static String tokenUrl = \\\"https://app.box.com/api/oauth2/token\\\";\\n\\npublic String getTokenFromFile() throws Exception {\\n\\n    String path = this.tokenFilePath;\\n    File file = new File(path);\\n    String line = \\\"\\\", token = \\\"\\\";\\n    try {\\n        BufferedReader br = new BufferedReader(new FileReader(file));\\n        while ((line = br.readLine()) != null) {\\n            token = line;\\n        }\\n        br.close();\\n    } catch (IOException e) {\\n        // TODO Auto-generated catch block\\n        e.printStackTrace();\\n    }\\n    String newRefleshToken = refleshToken(token);\\n    String accessToken = newRefleshToken.substring(17, 49);\\n    return accessToken;\\n}\\n\",\"private String refleshToken(String tokencode) throws Exception {\\n    String accessToken = tokencode.substring(17, 49);\\n    String refleshToken = tokencode.substring(105, 169);\\n    tokencode = HttpURLConnectionExample.refreshToken(refleshToken);\\n        writeTokenToTextFile(tokencode);\\n        return tokencode;\\n    }\\n\\n public static String refreshToken(String newToken) throws Exception {\\n\\n\\n    String urlParameters = \\\"grant_type=refresh_token&refresh_token=\\\" + newToken + \\\"&client_id=\\\" + client_id + \\\"&client_secret=\\\" + client_secret;\\n\\n    String result = sendPost(tokenUrl, urlParameters);\\n    return result;\\n}\\n\",\"String sendPost(String url, String urlParameters) throws Exception {\\n\\n   URL obj = new URL(url);\\n   HttpsURLConnection con = (HttpsURLConnection) obj.openConnection();\\n\\n   //add reuqest header\\n   con.setRequestMethod(\\\"POST\\\");\\n   con.setRequestProperty(\\\"User-Agent\\\", USER_AGENT);\\n   con.setRequestProperty(\\\"Accept-Language\\\", \\\"en-US,en;q=0.5\\\");\\n\\n   // Send post request\\n   con.setDoOutput(true);\\n   DataOutputStream wr = new DataOutputStream(con.getOutputStream());\\n   wr.writeBytes(urlParameters);\\n   wr.flush();\\n   wr.close();\\n\\n   int responseCode = con.getResponseCode();\\n   System.out.println(\\\"Response Code : \\\" + responseCode);\\n\\n   BufferedReader in = new BufferedReader(\\n           new InputStreamReader(con.getInputStream()));\\n   String inputLine;\\n   StringBuffer response = new StringBuffer();\\n\\n   while ((inputLine = in.readLine()) != null) {\\n       response.append(inputLine);\\n   }\\n   in.close();\\n\\n   return response.toString();\\n}\\n\"]","languages":{"detected":"Java","statistics":{"JavaScript":1,"C":3,"C++":4,"Python":2,"Java":13,"HTML":0,"CSS":2,"Ruby":0,"Go":0,"PHP":0,"Unknown":1}}},{"question_id":15269989,"creation_date":1447768012,"extraction_date":"2017-11-04T23:43:05.459Z","codeblocks":"[\"Content-Type: application/x-www-form-urlencoded\",\"content-type\",\"content-type\"]","languages":{"detected":"Unknown","statistics":{"JavaScript":0,"C":0,"C++":0,"Python":0,"Java":0,"HTML":0,"CSS":0,"Ruby":0,"Go":0,"PHP":0,"Unknown":1}}},{"question_id":23730283,"creation_date":1479752846,"extraction_date":"2017-11-04T23:43:05.461Z","codeblocks":"[\"bash test/script.sh\\n\",\"test\"]","languages":{"detected":"Unknown","statistics":{"JavaScript":0,"C":0,"C++":0,"Python":0,"Java":0,"HTML":0,"CSS":0,"Ruby":0,"Go":0,"PHP":0,"Unknown":1}}},{"question_id":34233756,"creation_date":1478818624,"extraction_date":"2017-11-04T23:43:05.462Z","codeblocks":"[\"window.initialConfig[\\\"enterpriseId\\\"]\",\"console.log(window.initialConfig[\\\"enterpriseId\\\"]);\"]","languages":{"detected":"JavaScript","statistics":{"JavaScript":2,"C":0,"C++":0,"Python":0,"Java":0,"HTML":0,"CSS":0,"Ruby":0,"Go":0,"PHP":0,"Unknown":1}}},{"question_id":39072124,"creation_date":1478068434,"extraction_date":"2017-11-04T23:43:05.463Z","codeblocks":"[\"private static BoxSharedLink createSharedLink(BoxAPIConnection api, String fileId) {\\n    BoxFile file = new BoxFile(api, fileId);\\n    BoxSharedLink.Permissions permissions = new BoxSharedLink.Permissions();\\n    permissions.setCanDownload(true);\\n    permissions.setCanPreview(true);\\n    Date date = new Date();\\n\\n    Calendar unshareAt = Calendar.getInstance();\\n    unshareAt.setTime(date);\\n    unshareAt.add(Calendar.DATE, 14);\\n\\n    BoxSharedLink sharedLink = file.createSharedLink(BoxSharedLink.Access.COMPANY, unshareAt.getTime(), permissions);\\n    logger.info(\\\"shared link: \\\" + sharedLink.getURL());\\n    return  sharedLink;\\n}\\n\"]","languages":{"detected":"Java","statistics":{"JavaScript":0,"C":0,"C++":1,"Python":0,"Java":6,"HTML":0,"CSS":2,"Ruby":0,"Go":1,"PHP":1,"Unknown":1}}},{"question_id":16557657,"creation_date":1473643785,"extraction_date":"2017-11-04T23:43:05.465Z","codeblocks":"[\"public void listFilesInBoxFolders(String folderId) {\\n\\n    try {\\n        // get a list of songs\\n        BoxApiFolder folderApi = new BoxApiFolder(mSession);\\n        BoxListItems items = folderApi.getItemsRequest(folderId).send();\\n\\n        JSONObject object = new JSONObject(items.toJson());\\n\\n        LogUtils.log(TAG, \\\"Object \\\" + object.toString());\\n\\n        JSONArray array = object.getJSONArray(\\\"entries\\\");\\n\\n        for (int i = 0; i < array.length(); i++) {\\n            JSONObject object1 = array.getJSONObject(i);\\n            String type = object1.getString(\\\"type\\\");\\n            String id = object1.getString(\\\"id\\\");\\n            String name = object1.getString(\\\"name\\\");\\n            if (type.equals(\\\"folder\\\")) {\\n                listFilesInBoxFolders(id);\\n            } else if (type.equals(\\\"file\\\")) {\\n                // Supported Media file types\\n                if (name.contains(\\\"mp3\\\") || name.contains(\\\"m4a\\\") || name.contains(\\\"flac\\\")) {\\n                    musicItems.add(new BoxMusicItem(id, name));\\n                }\\n            }\\n        }\\n\\n        LogUtils.log(TAG, \\\"array \\\" + array.toString());\\n\\n    } catch (BoxException e) {\\n        e.printStackTrace();\\n    } catch (JSONException e) {\\n        e.printStackTrace();\\n        LogUtils.log(TAG, \\\"Json Error\\\");\\n    }\\n    // For testing to make sure i have all files in box\\n    printFilesInBox();\\n }\\n\"]","languages":{"detected":"Java","statistics":{"JavaScript":1,"C":4,"C++":5,"Python":-1,"Java":10,"HTML":0,"CSS":0,"Ruby":0,"Go":0,"PHP":2,"Unknown":1}}},{"question_id":23730283,"creation_date":1471620864,"extraction_date":"2017-11-04T23:43:05.466Z","codeblocks":"[\"fileUpload=@\\\\\\\"file, with comma .txt\\\\\\\"\\n\"]","languages":{"detected":"Unknown","statistics":{"JavaScript":0,"C":0,"C++":0,"Python":0,"Java":0,"HTML":0,"CSS":0,"Ruby":0,"Go":0,"PHP":0,"Unknown":1}}},{"question_id":20252226,"creation_date":1463567067,"extraction_date":"2017-11-04T23:43:05.469Z","codeblocks":"[\"oAuth2.0\",\"curl_setopt_array($curl, array(\\n\\n   CURLOPT_URL => \\\"https://app.box.com/api/oauth2/authorize\\\",\\n\\n   CURLOPT_RETURNTRANSFER => true,\\n\\n   CURLOPT_ENCODING => \\\"content-type: application/x-www-form-urlencoded\\\",\\n\\n   CURLOPT_MAXREDIRS => 10,\\n\\n   CURLOPT_TIMEOUT => 30,\\n\\n   CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\\n\\n   CURLOPT_CUSTOMREQUEST => \\\"POST\\\",\\n\\n   CURLOPT_POSTFIELDS =>\\n \\\"response_type=code&client_id=\\\".$CLIENT_ID.\\\"&state=\\\".$STATE,\\n\\n));\\n\",\"\\\"name\\\" = \\\"request_token\\\"\",\"\\\"value\\\"\",\"CURLOPT_POSTFIELDS => \\\"response_type=code&client_id=\\\".$CLIENT_ID.\\\"&state=\\\".$STATE.\\\"&request_token=\\\".$REQ_TOKEN.\\\"&login=\\\".$USER_LOGIN.\\\"&password=\\\".$PASSWORD\\n\",\"  CURLOPT_COOKIEFILE => $COOKIE, (where $COOKIE is the path to the cookie file)\\n\",\"response_type=code&client_id=\\\".$CLIENT_ID.\\\"&state=\\\".$STATE.\\\"&redirect_uri=\\\".$REDIRECT_URI.\\\"&doconsent=doconsent&scope=root_readwrite&ic=\\\".$IC\\n\",\"CURLOPT_COOKIEFILE => $COOKIE,\\n\",\"CURLOPT_HEADER => true,\\n\",\"http://0.0.0.0(*redirect uri*)/?state=[box-generated_state_security_token]&code=[SOME_CODE] and note the \\\"code=\\\" value.\\n\",\"\\\"code\\\"\",\"CURLOPT_POSTFIELDS => \\\"grant_type=authorization_code&code=\\\".$CODE.\\\"&client_id=\\\".$CLIENT_ID.\\\"&client_secret=\\\".$CLIENT_SECRET,\\n\"]","languages":{"detected":"CSS","statistics":{"JavaScript":0,"C":1,"C++":0,"Python":0,"Java":0,"HTML":0,"CSS":2,"Ruby":0,"Go":0,"PHP":2,"Unknown":1}}},{"question_id":21227891,"creation_date":1463468796,"extraction_date":"2017-11-04T23:43:05.471Z","codeblocks":"[\"String clienId = \\\"your client id \\\";\\n\\nString client_secret = \\\"your secret id\\\"; \\n\\nString code = \\\"sdsdsd3sdsdC0oGqOS2WgaFipZBdj\\\"; // use above extracted  code value \\nBoxAPIConnection con = new BoxAPIConnection(clienId,client_secret,code);\\n\\nString accessToken = con.getAccessToken();\\n\\nSystem.out.println(\\\"Accss_Token : \\\" +accessToken);\\n\"]","languages":{"detected":"Java","statistics":{"JavaScript":0,"C":0,"C++":1,"Python":0,"Java":4,"HTML":0,"CSS":0,"Ruby":0,"Go":0,"PHP":1,"Unknown":1}}},{"question_id":37187429,"creation_date":1463421751,"extraction_date":"2017-11-04T23:43:05.471Z","codeblocks":"[\"var boxHeaders = {\\n  'Content-Type': 'application/x-www-form-urlencoded'\\n};\\n\\nvar boxOptions = {\\n  url: 'https://api.box.com/oauth2/token',\\n  method: 'POST',\\n  headers: boxHeaders\\n};\\n\\nvar form = {\\n  grant_type:'urn:ietf:params:oauth:grant-type:jwt-bearer',\\n  client_id: 'id',\\n  client_secret: 'secret',\\n  assertion: boxtoken\\n};\\n\\nvar request = https.request(boxOptions, function(response) {\\n  // do stuff\\n});\\n\\nrequest.write(querystring.stringify(form));\\nrequest.end();\\n\"]","languages":{"detected":"JavaScript","statistics":{"JavaScript":3,"C":-1,"C++":-1,"Python":0,"Java":-1,"HTML":0,"CSS":2,"Ruby":0,"Go":-1,"PHP":1,"Unknown":1}}},{"question_id":25463885,"creation_date":1459824648,"extraction_date":"2017-11-04T23:43:05.473Z","codeblocks":"[\"\\\"accessible_by\\\": { \\\"id\\\": \\\"USER_ID\\\", \\\"type\\\": \\\"user\\\" }\\n\"]","languages":{"detected":"JavaScript","statistics":{"JavaScript":2,"C":0,"C++":0,"Python":0,"Java":0,"HTML":0,"CSS":0,"Ruby":0,"Go":0,"PHP":0,"Unknown":1}}},{"question_id":11058475,"creation_date":1455662641,"extraction_date":"2017-11-04T23:43:05.474Z","codeblocks":"[\"//WE SET THE SEARCH FOLDER:\\n$search_folder=\\\"XXXX/YYYYY/ZZZZZ/MMMMM/AAAAA/BBBBB\\\";\\n\\n//WE NEED THE LAST BIT SO WE CAN DO A SEARCH FOR IT\\n$folder_structure=array_reverse (explode(\\\"/\\\",$search_folder));\\n\\n// We run a CURL (I'm assuming all the authentication and all other CURL parameters are already set!) to search for the last bit, if you want to search for a file rather than a folder, amend the search query accordingly\\ncurl_setopt($curl, CURLOPT_URL, \\\"https://api.box.com/2.0/search?query=\\\".urlencode($folder_structure[0]).\\\"&type=folder\\\");    \\n\\n// Let's make a cine array out of that response\\n$json=json_decode(curl_exec($curl),true);\\n$i=0;\\n$notthis=true;\\n\\n// We need to loop trough the result, till either we find a matching element, either we are at the end of the array\\nwhile ($notthis && $i<count($json['entries'])) {\\n  $result_info=$json['entries'][$i];\\n\\n     //The path of each search result is kept in a multidimensional array, so we just rebuild that array, ignoring the first element (that is Always the ROOT)\\n     if ($search_folder == implode(\\\"/\\\",array_slice(array_column($result_info['path_collection']['entries'],'name'),1)).\\\"/\\\".$folder_structure[0])\\n        {\\n         $notthis=false;\\n         $folder_id=$result_info['id'];\\n        }\\n      else\\n        {\\n         $i++;  \\n        }\\n   }\\nif ($notthis) {echo \\\"Path not found....\\\";} else {echo \\\"Folder id: $folder_id\\\";}\\n\"]","languages":{"detected":"C++","statistics":{"JavaScript":2,"C":1,"C++":3,"Python":3,"Java":1,"HTML":0,"CSS":2,"Ruby":0,"Go":-1,"PHP":3,"Unknown":1}}},{"question_id":34532337,"creation_date":1454087811,"extraction_date":"2017-11-04T23:43:05.476Z","codeblocks":"[\"Iterable<BoxItem.Info>\",\"BoxFolder.search()\"]","languages":{"detected":"Go","statistics":{"JavaScript":0,"C":0,"C++":0,"Python":0,"Java":0,"HTML":0,"CSS":0,"Ruby":0,"Go":1,"PHP":0,"Unknown":1}}},{"question_id":34583902,"creation_date":1451920321,"extraction_date":"2017-11-04T23:43:05.476Z","codeblocks":"[\"As-User\"]","languages":{"detected":"Unknown","statistics":{"JavaScript":0,"C":0,"C++":0,"Python":0,"Java":0,"HTML":0,"CSS":0,"Ruby":0,"Go":0,"PHP":0,"Unknown":1}}},{"question_id":33445955,"creation_date":1448477958,"extraction_date":"2017-11-04T23:43:05.479Z","codeblocks":"[\"parameter\",\"application/x-www-form-urlencoded\",\"parameter\"]","languages":{"detected":"Unknown","statistics":{"JavaScript":0,"C":0,"C++":0,"Python":0,"Java":0,"HTML":0,"CSS":0,"Ruby":0,"Go":0,"PHP":0,"Unknown":1}}},{"question_id":33850852,"creation_date":1448321574,"extraction_date":"2017-11-04T23:43:05.480Z","codeblocks":"[\"?fields={field name}\",\"GET /folders/{id}?fields=tags\",\"GET /folders/{id}?fields=owned_by,tags\"]","languages":{"detected":"Unknown","statistics":{"JavaScript":0,"C":0,"C++":0,"Python":0,"Java":0,"HTML":0,"CSS":0,"Ruby":0,"Go":0,"PHP":0,"Unknown":1}}},{"question_id":33445955,"creation_date":1448013762,"extraction_date":"2017-11-04T23:43:05.482Z","codeblocks":"[\"openssl genrsa -aes256 -out private_key.pem 2048\\n\",\"openssl rsa -pubout -in private_key.pem -out public_key.pem\\n\",\"var privateKey = File.ReadAllText(\\\"private_key.pem\\\");\\n\\nvar boxConfig = new BoxConfig(CLIENT_ID, CLIENT_SECRET, ENTERPRISE_ID, privateKey, JWT_PRIVATE_KEY_PASSWORD, JWT_PUBLIC_KEY_ID);\\nvar boxJWT = new BoxJWTAuth(boxConfig);\\n\\nvar adminToken = boxJWT.AdminToken();\\nConsole.WriteLine(\\\"Admin Token: \\\" + adminToken);\\n\"]","languages":{"detected":"Java","statistics":{"JavaScript":2,"C":-1,"C++":1,"Python":0,"Java":4,"HTML":0,"CSS":2,"Ruby":0,"Go":1,"PHP":1,"Unknown":1}}}]}